{
  "paragraphs": [
    {
      "text": "%md\n####Notebook \"PLAN_PARAMETERS_CALCULATION\". \n####*Main night plan parameters recalculation notebook. Get plan parameters for promo, promoproduct*.\n###### *Developer: [LLC Smart-Com](http://smartcom.software/), andrey.philushkin@effem.com*",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:19.009",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e####Notebook \u0026ldquo;PLAN_PARAMETERS_CALCULATION\u0026rdquo;.\u003cbr /\u003e\n####\u003cem\u003eMain night plan parameters recalculation notebook. Get plan parameters for promo, promoproduct\u003c/em\u003e.\u003c/p\u003e\n\u003ch6\u003e\u003cem\u003eDeveloper: \u003ca href\u003d\"http://smartcom.software/\"\u003eLLC Smart-Com\u003c/a\u003e, \u003ca href\u003d\"mailto:andrey.philushkin@effem.com\"\u003eandrey.philushkin@effem.com\u003c/a\u003e\u003c/em\u003e\u003c/h6\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591700_1213178376",
      "id": "20220811-123048_1646230989",
      "dateCreated": "2022-11-23 11:56:31.700",
      "dateStarted": "2022-12-06 09:45:19.013",
      "dateFinished": "2022-12-06 09:45:19.017",
      "status": "FINISHED"
    },
    {
      "title": "Function checks whether we in notebook or python",
      "text": "%pyspark\ndef is_notebook() -\u003e bool:\n    try:\n        shell \u003d get_ipython().__class__.__name__\n        if shell \u003d\u003d \u0027ZMQInteractiveShell\u0027:\n            return True   # Jupyter notebook or qtconsole\n        elif shell \u003d\u003d \u0027TerminalInteractiveShell\u0027:\n            return False  # Terminal running IPython\n        else:\n            return False  # Other type (?)\n    except NameError:\n        return False      # Probably standard Python interpreter",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:19.113",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591700_1070050459",
      "id": "paragraph_1660226350272_497098411",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:19.117",
      "dateFinished": "2022-12-06 09:45:43.521",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nfrom pyspark.sql import SQLContext, DataFrame, Row, Window\nfrom pyspark.sql import SparkSession\nfrom pyspark.context import SparkContext\nfrom pyspark.sql.types import *\nfrom pyspark.sql.functions import *\nimport pyspark.sql.functions as F\nimport pandas as pd\nimport datetime, time\nimport os\nimport json\nimport subprocess",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:43.538",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_1193727111",
      "id": "20220811-123048_1423157702",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:43.542",
      "dateFinished": "2022-12-06 09:45:43.912",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\ndatesDimSchema \u003d StructType([\n  StructField(\"OriginalDate\", DateType(), False),\n  StructField(\"MarsYear\", IntegerType(), False),\n  StructField(\"MarsPeriod\", IntegerType(), False),\n  StructField(\"MarsWeek\",  IntegerType(), False),\n  StructField(\"MarsDay\", IntegerType(),  False),\n  StructField(\"MarsPeriodName\", StringType(), False),\n  StructField(\"MarsPeriodFullName\",  StringType(), False),\n  StructField(\"MarsWeekName\", StringType(),  False),\n  StructField(\"MarsWeekFullName\", StringType(), False),\n  StructField(\"MarsDayName\", StringType(), False),\n  StructField(\"MarsDayFullName\",  StringType(), False),\n  StructField(\"CalendarYear\", IntegerType(),  False),\n  StructField(\"CalendarMonth\", IntegerType(), False),\n  StructField(\"CalendarDay\", IntegerType(), False),\n  StructField(\"CalendarDayOfYear\",  IntegerType(), False),\n  StructField(\"CalendarMonthName\", StringType(),  False),\n  StructField(\"CalendarMonthFullName\", StringType(), False),\n  StructField(\"CalendarYearWeek\", IntegerType(), False),\n  StructField(\"CalendarWeek\",  IntegerType(), False)\n])\n\ninputLogMessageSchema \u003d StructType([\n  StructField(\"logMessage\", StringType(), False)\n]);\n\noutputProductChangeIncidentsSchema \u003d StructType([\n  StructField(\"RecalculatedPromoId\", StringType(), False),\n  StructField(\"AddedProductIds\", StringType(), True),\n  StructField(\"ExcludedProductIds\", StringType(), True)\n]);",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:43.942",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_1721692966",
      "id": "20220811-123048_546555993",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:43.946",
      "dateFinished": "2022-12-06 09:45:44.164",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nif is_notebook():\n sys.argv\u003d[\u0027\u0027,\u0027{\"MaintenancePathPrefix\": \u0027\n \u0027\"/JUPITER/RAW/#MAINTENANCE/2022-12-05_manual__2022-12-05T08%3A30%3A13.973547%2B00%3A00_\", \u0027\n \u0027\"ProcessDate\": \"2022-12-05\", \"Schema\": \"Jupiter\", \"HandlerId\": \u0027\n \u0027\"6bc06c65-d2c0-4898-be2e-c33e437a3d9d\"}\u0027]\n \n sc.addPyFile(\"hdfs:///SRC/SHARED/EXTRACT_SETTING.py\")\n sc.addPyFile(\"hdfs:///SRC/SHARED/SUPPORT_FUNCTIONS.py\")\n sc.addPyFile(\"hdfs:///SRC/JUPITER/PROMO_PARAMETERS_CALCULATION/SET_PROMO_PRODUCT.py\")\n sc.addPyFile(\"hdfs:///SRC/JUPITER/PROMO_PARAMETERS_CALCULATION/PLAN_PRODUCT_PARAMS_CALCULATION_PROCESS.py\")\n sc.addPyFile(\"hdfs:///SRC/JUPITER/PROMO_PARAMETERS_CALCULATION/PLAN_PROMO_PARAMS_CALCULATION_PROCESS.py\")\n sc.addPyFile(\"hdfs:///SRC/JUPITER/PROMO_PARAMETERS_CALCULATION/PLAN_SUPPORT_PARAMS_CALCULATION_PROCESS.py\") \n sc.addPyFile(\"hdfs:///SRC/JUPITER/PROMO_PARAMETERS_CALCULATION/COGS_TI_CALCULATION.py\") \n sc.addPyFile(\"hdfs:///SRC/JUPITER/PROMO_PARAMETERS_CALCULATION/RA_TI_SHOPPER_CALCULATION.py\")  ",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:44.246",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_17850230",
      "id": "paragraph_1660226497857_584430005",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:44.250",
      "dateFinished": "2022-12-06 09:45:44.620",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nspark \u003d SparkSession.builder.appName(\u0027Jupiter - PySpark\u0027).getOrCreate()\nsc \u003d SparkContext.getOrCreate();\n\nimport EXTRACT_SETTING as es\n\nSETTING_RAW_DIR \u003d es.SETTING_RAW_DIR\nSETTING_PROCESS_DIR \u003d es.SETTING_PROCESS_DIR\nSETTING_OUTPUT_DIR \u003d es.SETTING_OUTPUT_DIR\n\nDATE_DIR\u003des.DATE_DIR\n\nEXTRACT_ENTITIES_AUTO_PATH \u003d f\u0027{es.HDFS_PREFIX}{es.MAINTENANCE_PATH_PREFIX}EXTRACT_ENTITIES_AUTO.csv\u0027\nprocessDate\u003des.processDate\npipelineRunId\u003des.pipelineRunId\n\nhandlerId\u003des.input_params.get(\"HandlerId\")\n\nprint(f\u0027EXTRACT_ENTITIES_AUTO_PATH\u003d{EXTRACT_ENTITIES_AUTO_PATH}\u0027)\n\nimport SUPPORT_FUNCTIONS as sp",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:44.650",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "INPUT_PARAMS\u003d{\"MaintenancePathPrefix\": \"/JUPITER/RAW/#MAINTENANCE/2022-12-05_manual__2022-12-05T08%3A30%3A13.973547%2B00%3A00_\", \"ProcessDate\": \"2022-12-05\", \"Schema\": \"Jupiter\", \"HandlerId\": \"6bc06c65-d2c0-4898-be2e-c33e437a3d9d\"}\nSETTINGS_PATH\u003dhdfs:///JUPITER/RAW/#MAINTENANCE/2022-12-05_manual__2022-12-05T08%3A30%3A13.973547%2B00%3A00_PARAMETERS.csv\nhdfs:///JUPITER/RAW/#MAINTENANCE/2022-12-05_manual__2022-12-05T08%3A30%3A13.973547%2B00%3A00_PARAMETERS.csv\n\nprocessDate: 2022-12-05\npipelineRunId: manual__2022-12-05T08%3A30%3A13.973547%2B00%3A00\npipelineSubfolderName: None\n\nSETTING_RAW_DIR: hdfs:///JUPITER/RAW\nSETTING_PROCESS_DIR: hdfs:///JUPITER/PROCESS\nSETTING_OUTPUT_DIR: hdfs:///JUPITER/OUTPUT\nMAINTENANCE_PATH_PREFIX: /JUPITER/RAW/#MAINTENANCE/2022-12-05_manual__2022-12-05T08%3A30%3A13.973547%2B00%3A00_\nSYSTEM_NAME: JUPITER\nSETTING_BRANCH_NAME: \nOther settings - list \"systemParametersDF\" data frame\nEXTRACT_ENTITIES_AUTO_PATH\u003dhdfs:///JUPITER/RAW/#MAINTENANCE/2022-12-05_manual__2022-12-05T08%3A30%3A13.973547%2B00%3A00_EXTRACT_ENTITIES_AUTO.csv\nDefined functions:\ngetFilesList(path) - list files recursively\n    path - root path\ngetShowString(df, n\u003d20, truncate\u003dTrue, vertical\u003dFalse) - prints Spark DataFrame\ngetSchemasMap(schemas_dir) - creates dictionanry with Spark Schemas, schemas_dir - directory with json files with schemas\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d0"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d1"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d2"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d3"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d4"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d5"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d6"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_1835229063",
      "id": "20220811-123048_1400871145",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:44.654",
      "dateFinished": "2022-12-06 09:45:52.996",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nschema \u003d es.input_params.get(\"Schema\")",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:53.062",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_1327355689",
      "id": "20220811-123048_1974201803",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:53.071",
      "dateFinished": "2022-12-06 09:45:53.288",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nDIRECTORY \u003d SETTING_RAW_DIR + \u0027/SOURCES/\u0027\n\nPROMO_PATH \u003d DIRECTORY + \u0027JUPITER/Promo\u0027\nPROMOSTATUS_PATH \u003d DIRECTORY + \u0027JUPITER/PromoStatus\u0027\nPROMOPRODUCT_PATH \u003d DIRECTORY + \u0027JUPITER/PromoProduct\u0027\nPRODUCT_PATH \u003d DIRECTORY + \u0027JUPITER/Product\u0027\nPRODUCTTREE_PATH \u003d DIRECTORY + \u0027JUPITER/ProductTree\u0027\nPROMOPRODUCTTREE_PATH \u003d DIRECTORY + \u0027JUPITER/PromoProductTree\u0027\nPRICELIST_PATH \u003d DIRECTORY + \u0027JUPITER/PriceList\u0027\nBASELINE_PATH \u003d DIRECTORY + \u0027JUPITER/BaseLine\u0027\nSHARES_PATH \u003d DIRECTORY + \u0027JUPITER/ClientTreeBrandTech\u0027\nCLIENTTREE_PATH \u003d DIRECTORY + \u0027JUPITER/ClientTree\u0027\nCLIENTHIERARCHY_PATH \u003d DIRECTORY + \u0027JUPITER/ClientTreeHierarchyView\u0027\nDATESDIM_PATH \u003d DIRECTORY + \u0027UNIVERSALCATALOG/MARS_UNIVERSAL_CALENDAR.csv\u0027\nCORRECTION_PATH \u003d DIRECTORY + \u0027JUPITER/PromoProductsCorrection\u0027\nINCREMENTAL_PATH \u003d DIRECTORY + \u0027JUPITER/IncrementalPromo\u0027\nPROMOSTATUS_PATH \u003d DIRECTORY + \u0027JUPITER/PromoStatus\u0027\nCOGS_PATH \u003d DIRECTORY + \u0027JUPITER/COGS\u0027\nCOGSTn_PATH \u003d DIRECTORY + \u0027JUPITER/PlanCOGSTn\u0027\nTI_PATH \u003d DIRECTORY + \u0027JUPITER/TradeInvestment\u0027\nBTL_PATH \u003d DIRECTORY + \u0027JUPITER/BTL\u0027\nBTLPROMO_PATH \u003d DIRECTORY + \u0027JUPITER/BTLPromo\u0027\nPROMOSUPPORT_PATH \u003d DIRECTORY + \u0027JUPITER/PromoSupport\u0027\nPROMOSUPPORTPROMO_PATH \u003d DIRECTORY + \u0027JUPITER/PromoSupportPromo\u0027\nBUDGETITEM_PATH \u003d DIRECTORY + \u0027JUPITER/BudgetItem\u0027\nBUDGETSUBITEM_PATH \u003d DIRECTORY + \u0027JUPITER/BudgetSubItem\u0027\nASSORTMENTMARTIX_PATH \u003d DIRECTORY + \u0027JUPITER/AssortmentMatrix\u0027\nBRANDTECH_PATH \u003d DIRECTORY + \u0027JUPITER/BrandTech\u0027\nSERVICEINFO_PATH \u003d DIRECTORY + \u0027JUPITER/ServiceInfo\u0027\nRATISHOPPER_PATH \u003d DIRECTORY + \u0027JUPITER/RATIShopper\u0027\n\nFILTERED_PROMO_PATH \u003d SETTING_PROCESS_DIR + \u0027/BlockedPromo/BlockedPromo.parquet\u0027\n\nPLAN_PROMO_PARAMETERS_CALCULATION_RESULT_PATH \u003d SETTING_PROCESS_DIR + \u0027/Promo/Promo.parquet\u0027\nPLAN_PROMOPRODUCT_PARAMETERS_CALCULATION_RESULT_PATH \u003d SETTING_PROCESS_DIR + \u0027/PromoProduct/PromoProduct.parquet\u0027\nPLAN_PROMOSUPPORTPROMO_PARAMETERS_CALCULATION_RESULT_PATH \u003d SETTING_PROCESS_DIR + \u0027/PromoSupportPromo/PromoSupportPromo.parquet\u0027\nNEW_PROMOPRODUCT_PATH \u003d SETTING_PROCESS_DIR + \u0027/PromoProduct/NewPromoProduct.CSV\u0027\nSERVICEINFO_RESULT_PATH \u003d SETTING_OUTPUT_DIR + \u0027/ServiceInfo/ServiceInfo.CSV\u0027\nNEW_PRODUCTCHANGEINCIDENTS_PATH \u003d SETTING_OUTPUT_DIR + \u0027/ProductChangeIncident/NewProductChangeIncident.CSV\u0027\n\nINPUT_FILE_LOG_PATH \u003d SETTING_PROCESS_DIR + \u0027/Logs/\u0027 +  handlerId + \u0027.csv\u0027\nOUTPUT_LOG_PATH \u003d  SETTING_PROCESS_DIR + \u0027/Logs/\u0027\nOUTPUT_FILE_LOG_PATH \u003d OUTPUT_LOG_PATH + handlerId + \u0027.csv\u0027\n\nINPUT_FILE_LOG_PATH \u003d es.SETTING_PROCESS_DIR + \u0027/Logs/\u0027 + handlerId + \u0027.csv\u0027\n# OUTPUT_LOG_PATH \u003d  es.SETTING_PROCESS_DIR + \u0027/Logs/\u0027\n# OUTPUT_FILE_LOG_PATH \u003d OUTPUT_LOG_PATH + handlerId + \u0027.csv\u0027\n# OUTPUT_TEMP_FILE_LOG_PATH \u003d OUTPUT_LOG_PATH + handlerId + \u0027temp.csv\u0027\n\n# DEBUG OUTPUT\n# OUTPUT_SOURCE_PROMO_PATH \u003d \u0027/dbfs/\u0027 + SETTING_PROCESS_DIR + \u0027/SourcePromo/SourcePromo.csv\u0027\n# OUTPUT_PROMO_PATH \u003d \u0027/dbfs/\u0027 + SETTING_PROCESS_DIR + \u0027/Promo/Promo.csv\u0027\n# OUTPUT_SOURCE_PROMOPRODUCT_PATH \u003d \u0027/dbfs/\u0027 + SETTING_PROCESS_DIR + \u0027/SourcePromoProduct/SourcePromoProduct.csv\u0027\n# OUTPUT_PROMOPRODUCT_PATH \u003d \u0027/dbfs/\u0027 + SETTING_PROCESS_DIR + \u0027/PromoProduct/PromoProduct.csv\u0027\n# OUTPUT_SOURCE_PROMOSUPPORTPROMO_PATH \u003d \u0027/dbfs/\u0027 + SETTING_PROCESS_DIR + \u0027/SourcePromoSupportPromo/SourcePromoSupportPromo.csv\u0027\n# OUTPUT_PROMOSUPPORTPROMO_PATH \u003d \u0027/dbfs/\u0027 + SETTING_PROCESS_DIR + \u0027/PromoSupportPromo/PromoSupportPromo.csv\u0027\n",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:53.371",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_399690721",
      "id": "20220811-123048_1023403809",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:53.375",
      "dateFinished": "2022-12-06 09:45:53.592",
      "status": "FINISHED"
    },
    {
      "title": "Load raw entities schemas from json files to map",
      "text": "%pyspark\nSCHEMAS_DIR\u003dSETTING_RAW_DIR + \u0027/SCHEMAS/\u0027\nschemas_map \u003d sp.getSchemasMap(SCHEMAS_DIR)",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:53.675",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_1444226739",
      "id": "paragraph_1660226791674_1877329031",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:53.679",
      "dateFinished": "2022-12-06 09:45:54.449",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\npriceListDF \u003d spark.read.csv(PRICELIST_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"PriceList\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\npromoDF \u003d spark.read.csv(PROMO_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"Promo\"])\\\n.withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\\\n.withColumn(\"IsLSVBased\",col(\"IsLSVBased\").cast(BooleanType()))\\\n.withColumn(\"InOut\",col(\"InOut\").cast(BooleanType()))\\\n.withColumn(\"NeedRecountUplift\",col(\"NeedRecountUplift\").cast(BooleanType()))\\\n.withColumn(\"IsAutomaticallyApproved\",col(\"IsAutomaticallyApproved\").cast(BooleanType()))\\\n.withColumn(\"IsCMManagerApproved\",col(\"IsCMManagerApproved\").cast(BooleanType()))\\\n.withColumn(\"IsDemandPlanningApproved\",col(\"IsDemandPlanningApproved\").cast(BooleanType()))\\\n.withColumn(\"IsDemandFinanceApproved\",col(\"IsDemandFinanceApproved\").cast(BooleanType()))\\\n.withColumn(\"Calculating\",col(\"Calculating\").cast(BooleanType()))\\\n.withColumn(\"LoadFromTLC\",col(\"LoadFromTLC\").cast(BooleanType()))\\\n.withColumn(\"InOutExcludeAssortmentMatrixProductsButtonPressed\",col(\"InOutExcludeAssortmentMatrixProductsButtonPressed\").cast(BooleanType()))\\\n.withColumn(\"IsGrowthAcceleration\",col(\"IsGrowthAcceleration\").cast(BooleanType()))\\\n.withColumn(\"IsOnInvoice\",col(\"IsOnInvoice\").cast(BooleanType()))\\\n.withColumn(\"IsApolloExport\",col(\"IsApolloExport\").cast(BooleanType()))\\\n.withColumn(\"UseActualTI\",col(\"UseActualTI\").cast(BooleanType()))\\\n.withColumn(\"UseActualCOGS\",col(\"UseActualCOGS\").cast(BooleanType()))\\\n.withColumn(\"ManualInputSumInvoice\",col(\"ManualInputSumInvoice\").cast(BooleanType()))\\\n.withColumn(\"IsSplittable\",col(\"IsSplittable\").cast(BooleanType()))\\\n.withColumn(\"IsInExchange\",col(\"IsInExchange\").cast(BooleanType()))\\\n.withColumn(\"IsGAManagerApproved\",col(\"IsGAManagerApproved\").cast(BooleanType()))\npromoStatusDF \u003d spark.read.csv(PROMOSTATUS_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"PromoStatus\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\npromoProductDF \u003d spark.read.csv(PROMOPRODUCT_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"PromoProduct\"])\\\n.withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\\\n.withColumn(\"AverageMarker\",col(\"AverageMarker\").cast(BooleanType()))\nproductDF \u003d spark.read.csv(PRODUCT_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"Product\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nallProductDF \u003d spark.read.csv(PRODUCT_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"Product\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nallProduct01DF \u003d spark.read.csv(PRODUCT_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"Product\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nproductTreeDF \u003d spark.read.csv(PRODUCTTREE_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"ProductTree\"])\npromoProductTreeDF \u003d spark.read.csv(PROMOPRODUCTTREE_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"PromoProductTree\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nbaselineDF \u003d spark.read.csv(BASELINE_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"BaseLine\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nsharesDF \u003d spark.read.csv(SHARES_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"ClientTreeBrandTech\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nclientTreeDF \u003d spark.read.csv(CLIENTTREE_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"ClientTree\"])\nclientHierarchyDF \u003d spark.read.csv(CLIENTHIERARCHY_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"ClientTreeHierarchyView\"])\ndatesDF \u003d spark.read.format(\"csv\").option(\"delimiter\",\"|\").option(\"header\",\"true\").schema(datesDimSchema).load(DATESDIM_PATH)\ncorrectionDF \u003d spark.read.csv(CORRECTION_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"PromoProductsCorrection\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nbtlDF \u003d spark.read.csv(BTL_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"BTL\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nbtlPromoDF \u003d spark.read.csv(BTLPROMO_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"BTLPromo\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nincrementalDF \u003d spark.read.csv(INCREMENTAL_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"IncrementalPromo\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\ncogsDF \u003d spark.read.csv(COGS_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"COGS\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\ncogsTnDF \u003d spark.read.csv(COGSTn_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"PlanCOGSTn\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\ntiDF \u003d spark.read.csv(TI_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"TradeInvestment\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\npromoSupportDF \u003d spark.read.csv(PROMOSUPPORT_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"PromoSupport\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\npromoSupportPromoDF \u003d spark.read.csv(PROMOSUPPORTPROMO_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"PromoSupportPromo\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nbudgetItemDF \u003d spark.read.csv(BUDGETITEM_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"BudgetItem\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nbudgetSubItemDF \u003d spark.read.csv(BUDGETSUBITEM_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"BudgetSubItem\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nassortmentMatrixDF \u003d spark.read.csv(ASSORTMENTMARTIX_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"AssortmentMatrix\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nbrandTechDF \u003d spark.read.csv(BRANDTECH_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"BrandTech\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\nserviceInfoDF \u003d spark.read.csv(SERVICEINFO_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"ServiceInfo\"])\nratiShopperDF \u003d spark.read.csv(RATISHOPPER_PATH,sep\u003d\"\\u0001\",header\u003dTrue,schema\u003dschemas_map[\"RATIShopper\"]).withColumn(\"Disabled\",col(\"Disabled\").cast(BooleanType()))\n\nfilteredPromoDF \u003d spark.read.format(\"parquet\").load(FILTERED_PROMO_PATH)",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:54.479",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d7"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_594131364",
      "id": "20220811-123048_43000295",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:54.483",
      "dateFinished": "2022-12-06 09:45:56.665",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nprint(filteredPromoDF.count())",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:56.685",
      "progress": 88,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "122\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d8"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_1175857666",
      "id": "20220811-123048_763840908",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:56.688",
      "dateFinished": "2022-12-06 09:45:58.319",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\ntry:\n inputLogMessageDF \u003d spark.read.format(\"csv\").option(\"delimiter\",\"\\u0001\").option(\"header\",\"true\").load(INPUT_FILE_LOG_PATH)\n print(\u0027Log has been already made\u0027)\nexcept:\n inputLogMessageDF \u003d spark.createDataFrame(sc.emptyRDD(), inputLogMessageSchema)\n print(\u0027Init log\u0027)\n  \n",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:58.390",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Log has been already made\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d9"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_1382084968",
      "id": "20220811-123048_124267586",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:58.393",
      "dateFinished": "2022-12-06 09:45:58.813",
      "status": "FINISHED"
    },
    {
      "text": "%md\n####*Date transformation*",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:58.894",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e####\u003cem\u003eDate transformation\u003c/em\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_2122406533",
      "id": "20220811-123048_1156388193",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:58.897",
      "dateFinished": "2022-12-06 09:45:58.901",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\npromoDF \u003d promoDF\\\n  .withColumn(\u0027StartDate\u0027, date_add(to_date(promoDF.StartDate, \u0027yyyy-MM-dd\u0027), 1))\\\n  .withColumn(\u0027EndDate\u0027, date_add(to_date(promoDF.EndDate, \u0027yyyy-MM-dd\u0027), 1))\\\n  .withColumn(\u0027DispatchesStart\u0027, date_add(to_date(promoDF.DispatchesStart, \u0027yyyy-MM-dd\u0027), 1))\\\n  .withColumn(\u0027DispatchesEnd\u0027, date_add(to_date(promoDF.DispatchesEnd, \u0027yyyy-MM-dd\u0027), 1))\n\npriceListDF \u003d priceListDF\\\n  .withColumn(\u0027StartDate\u0027, date_add(to_date(priceListDF.StartDate, \u0027yyyy-MM-dd\u0027), 1))\\\n  .withColumn(\u0027EndDate\u0027, date_add(to_date(priceListDF.EndDate, \u0027yyyy-MM-dd\u0027), 1))\n\nbaselineDF \u003d baselineDF\\\n  .withColumn(\u0027StartDate\u0027, date_add(to_date(baselineDF.StartDate, \u0027yyyy-MM-dd\u0027), 1))\n\nassortmentMatrixDF \u003d assortmentMatrixDF\\\n  .withColumn(\u0027StartDate\u0027, date_add(to_date(assortmentMatrixDF.StartDate, \u0027yyyy-MM-dd\u0027), 1))\\\n  .withColumn(\u0027EndDate\u0027, date_add(to_date(assortmentMatrixDF.EndDate, \u0027yyyy-MM-dd\u0027), 1))\\\n  .withColumn(\u0027CreateDate\u0027, date_add(to_date(assortmentMatrixDF.CreateDate, \u0027yyyy-MM-dd\u0027), 1))\n\ntiDF \u003d tiDF\\\n  .withColumn(\u0027StartDate\u0027, date_add(to_date(tiDF.StartDate, \u0027yyyy-MM-dd\u0027), 1))\\\n  .withColumn(\u0027EndDate\u0027, date_add(to_date(tiDF.EndDate, \u0027yyyy-MM-dd\u0027), 1))\n\ncogsDF \u003d cogsDF\\\n  .withColumn(\u0027StartDate\u0027, date_add(to_date(cogsDF.StartDate, \u0027yyyy-MM-dd\u0027), 1))\\\n  .withColumn(\u0027EndDate\u0027, date_add(to_date(cogsDF.EndDate, \u0027yyyy-MM-dd\u0027), 1))\n\ncogsTnDF \u003d cogsTnDF\\\n  .withColumn(\u0027StartDate\u0027, date_add(to_date(cogsTnDF.StartDate, \u0027yyyy-MM-dd\u0027), 1))\\\n  .withColumn(\u0027EndDate\u0027, date_add(to_date(cogsTnDF.EndDate, \u0027yyyy-MM-dd\u0027), 1))",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:58.997",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_508041555",
      "id": "20220811-123048_1207012098",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:59.001",
      "dateFinished": "2022-12-06 09:45:59.471",
      "status": "FINISHED"
    },
    {
      "text": "%md\n####*Prepare dataframes for calculation*",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:59.501",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e####\u003cem\u003ePrepare dataframes for calculation\u003c/em\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_1725240458",
      "id": "20220811-123048_1353539929",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:59.505",
      "dateFinished": "2022-12-06 09:45:59.508",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nfilteredPromoDF \u003d filteredPromoDF.dropDuplicates()\n# print(\u0027filtered promo count:\u0027, filteredPromoDF.count())\n\n# promoProduct\npromoProductCols \u003d promoProductDF.columns\nallCalcPlanPromoProductDF \u003d promoProductDF.where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027)\nallCalcPlanPromoProductIdsDF \u003d allCalcPlanPromoProductDF.select(col(\u0027Id\u0027))\ndisabledPromoProductDF \u003d promoProductDF.join(allCalcPlanPromoProductIdsDF, \u0027Id\u0027, \u0027left_anti\u0027).select(promoProductDF[\u0027*\u0027])\n\n# print(\u0027promoProducts count:\u0027, promoProductDF.count())\n# print(\u0027notDisabledPromoProducts count:\u0027, allCalcPlanPromoProductDF.count())\n# print(\u0027disabledPromoProducts count:\u0027, disabledPromoProductDF.count())\n\n# promo\ncalcPlanPromoDF \u003d promoDF.where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027)\n\n# all promo\npromoCols \u003d promoDF.columns\nallCalcPlanPromoDF \u003d promoDF.where(col(\u0027Disabled\u0027) \u003d\u003d \u0027false\u0027)\nallCalcPlanPromoIdsDF \u003d allCalcPlanPromoDF.select(col(\u0027Id\u0027))\ndisabledPromoDF \u003d promoDF.join(allCalcPlanPromoIdsDF, \u0027Id\u0027, \u0027left_anti\u0027).select(promoDF[\u0027*\u0027])\n\n# print(\u0027promoDF count:\u0027, promoDF.count())\n# print(\u0027calcPlanPromoDF count:\u0027, allCalcPlanPromoDF.count())\n# print(\u0027disabledPromoDF count:\u0027, disabledPromoDF.count())\n\n# priceList\nplanParamsPriceListDF \u003d priceListDF\\\n  .where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027)\\\n  .select(\\\n           col(\u0027StartDate\u0027).alias(\u0027priceStartDate\u0027)\n          ,col(\u0027EndDate\u0027).alias(\u0027priceEndDate\u0027)\n          ,col(\u0027ProductId\u0027).alias(\u0027priceProductId\u0027)\n          ,col(\u0027Price\u0027).cast(DecimalType(30,6))\n          ,col(\u0027ClientTreeId\u0027).alias(\u0027priceClientTreeId\u0027)\n         )\n\n# baseline\nplanParamsBaselineDF \u003d baselineDF\\\n  .where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027)\\\n  .select(\\\n           col(\u0027ProductId\u0027).alias(\u0027baselineProductId\u0027)\n          ,col(\u0027DemandCode\u0027).alias(\u0027baselineDemandCode\u0027)\n          ,col(\u0027StartDate\u0027).alias(\u0027baselineStartDate\u0027)\\\n          ,col(\u0027SellInBaselineQTY\u0027).cast(DecimalType(30,6))\\\n          ,col(\u0027SellOutBaselineQTY\u0027).cast(DecimalType(30,6))\\\n  )\n\n# shares\nplanParamsSharesDF \u003d sharesDF.where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027).drop(\u0027Disabled\u0027)\n\n# product correction\nplanParamsCorrectionDF \u003d correctionDF\\\n  .where((col(\u0027Disabled\u0027) \u003d\u003d \u00270\u0027))\\\n  .select(\\\n           upper(col(\u0027PromoProductId\u0027)).alias(\u0027correctionPromoProductId\u0027)\n          ,col(\u0027PlanProductUpliftPercentCorrected\u0027).alias(\u0027correctionPlanProductUpliftPercentCorrected\u0027)\n         )\n\n# incremental\nplanParamsIncrementalDF \u003d incrementalDF\\\n  .where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027)\\\n  .select(\\\n           col(\u0027PromoId\u0027).alias(\u0027incrementalPromoId\u0027)\n          ,col(\u0027ProductId\u0027).alias(\u0027incrementalProductId\u0027)\n          ,col(\u0027PlanPromoIncrementalCases\u0027)\n         )\n\n# support\npromoSupportDF \u003d promoSupportDF.where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027)\npromoSupportPromoCols \u003d promoSupportPromoDF.columns\npromoSupportPromoCols.remove(\u0027#QCCount\u0027)\nactivePromoSupportPromoDF \u003d promoSupportPromoDF.where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027).select(promoSupportPromoCols)\nactivePromoSupportPromoIdsDF \u003d activePromoSupportPromoDF.select(col(\u0027Id\u0027))\ndisabledPromoSupportPromoDF \u003d promoSupportPromoDF.join(activePromoSupportPromoIdsDF, \u0027Id\u0027, \u0027left_anti\u0027).select(promoSupportPromoCols)\n\n# btl\nbtlDF \u003d btlDF.where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027)\nbtlPromoDF \u003d btlPromoDF.where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027)\n\n# print(\u0027promoSupportPromoDF count:\u0027, promoSupportPromoDF.count())\n# print(\u0027activePromoSupportPromoDF count:\u0027, activePromoSupportPromoDF.count())\n# print(\u0027disabledPromoSupportPromoDF count:\u0027, disabledPromoSupportPromoDF.count())\n\n# AM\nassortmentMatrixDF \u003d assortmentMatrixDF.where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027)\n\n# Product\nproductDF \u003d productDF.where(col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027)\n\n# COGS, TI, BrandTech\nbrandTechDF \u003d brandTechDF.where(col(\u0027Disabled\u0027) \u003d\u003d \u0027false\u0027)\n\ntiDF \u003d tiDF.where(col(\u0027Disabled\u0027) \u003d\u003d False)\ncogsDF \u003d cogsDF.where(col(\u0027Disabled\u0027) \u003d\u003d False)\ncogsTnDF \u003d cogsTnDF.where(col(\u0027Disabled\u0027) \u003d\u003d False)\n\n# RA TI Shopper\nratiShopperDF \u003d ratiShopperDF.where(col(\u0027Disabled\u0027) \u003d\u003d False)",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:45:59.605",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_1814968255",
      "id": "20220811-123048_375475506",
      "dateCreated": "2022-11-23 11:56:31.701",
      "dateStarted": "2022-12-06 09:45:59.609",
      "dateFinished": "2022-12-06 09:46:00.482",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n#status list for plan parameters recalculation\nplanParametersStatuses \u003d [\u0027DraftPublished\u0027,\u0027OnApproval\u0027,\u0027Approved\u0027,\u0027Planned\u0027]\n\n#notCheckPromoStatusList \u003d [\u0027Draft\u0027,\u0027Cancelled\u0027,\u0027Deleted\u0027,\u0027Closed\u0027]\nnotCheckPromoStatusList \u003d [\u0027Cancelled\u0027,\u0027Deleted\u0027]",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:46:00.509",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591701_1181653764",
      "id": "20220811-123048_982193282",
      "dateCreated": "2022-11-23 11:56:31.702",
      "dateStarted": "2022-12-06 09:46:00.513",
      "dateFinished": "2022-12-06 09:46:00.736",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nactiveClientTreeDF \u003d clientTreeDF.where(col(\u0027EndDate\u0027).isNull())\nactiveClientTreeList \u003d activeClientTreeDF.collect()\n\n@udf\ndef getDemandCode(objectId):\n  c \u003d [x for x in activeClientTreeList if x.ObjectId \u003d\u003d objectId]\n  if len(c) \u003d\u003d 0:\n    return \u0027\u0027\n  while (len(c) !\u003d 0) \u0026 (c[0].Type !\u003d \u0027root\u0027) \u0026 ((c[0].DemandCode \u003d\u003d \u0027\u0027) | (c[0].DemandCode is None)):\n    c \u003d [x for x in activeClientTreeList if x.ObjectId \u003d\u003d c[0].parentId]\n    if len(c) \u003d\u003d 0: \n      break\n  if len(c) \u003d\u003d 0:\n    return \u0027\u0027\n  else:\n    return c[0].DemandCode",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:46:00.813",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d10"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591702_1621692295",
      "id": "20220811-123048_1911107914",
      "dateCreated": "2022-11-23 11:56:31.702",
      "dateStarted": "2022-12-06 09:46:00.817",
      "dateFinished": "2022-12-06 09:46:01.488",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nactiveClientTreeList",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:46:01.517",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[Row(Id\u003d0, depth\u003d0, Type\u003d\u0027root\u0027, Name\u003d\u0027Clients\u0027, StartDate\u003ddatetime.datetime(2018, 12, 21, 12, 1, 24, 560000), EndDate\u003dNone, DemandCode\u003d\u0027\\x00\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000000, parentId\u003d5000000, RetailTypeName\u003dNone, FullPathName\u003d\u0027Clients\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003dNone, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d17, depth\u003d1, Type\u003d\u0027Group\u0027, Name\u003d\u0027NA\u0027, StartDate\u003ddatetime.datetime(2019, 12, 10, 9, 9, 51, 447000), EndDate\u003dNone, DemandCode\u003d\u0027\\x00\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000002, parentId\u003d5000000, RetailTypeName\u003d\u0027\\x00\u0027, FullPathName\u003d\u0027NA\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015696\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d18, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Tander\u0027, StartDate\u003ddatetime.datetime(2019, 11, 11, 21, 13, 28, 320000), EndDate\u003dNone, DemandCode\u003d\u0027TANDER_05_0125\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000003, parentId\u003d5000002, RetailTypeName\u003d\u0027\\x00\u0027, FullPathName\u003d\u0027NA \u003e Tander\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015711\u0027, DMDGroup\u003d\u002740077720\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d19, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Magnit MM\u0027, StartDate\u003ddatetime.datetime(2021, 10, 6, 12, 2, 48, 640000), EndDate\u003dNone, DemandCode\u003d\u002770015711_103\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000004, parentId\u003d5000003, RetailTypeName\u003d\u0027Convinience\u0027, FullPathName\u003d\u0027NA \u003e Tander \u003e Magnit MM\u0027, PostPromoEffectW1\u003d-4.9, PostPromoEffectW2\u003d-2.1, LogoFileName\u003d\u0027TANDER_20190607162326.jpg\u0027, GHierarchyCode\u003d\u0027\\x00\u0027, DMDGroup\u003d\u002770015711_103\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.1, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u00272669\u0027, #QCCount\u003d418),\n Row(Id\u003d21, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Magnit HM\u0027, StartDate\u003ddatetime.datetime(2021, 10, 26, 14, 3, 10, 720000), EndDate\u003dNone, DemandCode\u003d\u002770015711_101\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000005, parentId\u003d5000003, RetailTypeName\u003d\u0027Hypermarket\u0027, FullPathName\u003d\u0027NA \u003e Tander \u003e Magnit HM\u0027, PostPromoEffectW1\u003d-4.9, PostPromoEffectW2\u003d-2.1, LogoFileName\u003d\u0027mg_20190620182749.jpg\u0027, GHierarchyCode\u003d\u0027\\x00\u0027, DMDGroup\u003d\u002770015711_101\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.1, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u002754532\u0027, #QCCount\u003d418),\n Row(Id\u003d22, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Magnit cosmetics\u0027, StartDate\u003ddatetime.datetime(2021, 10, 6, 12, 3, 23, 47000), EndDate\u003dNone, DemandCode\u003d\u002770015711_102\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d4, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000006, parentId\u003d5000003, RetailTypeName\u003d\u0027Drogerie\u0027, FullPathName\u003d\u0027NA \u003e Tander \u003e Magnit cosmetics\u0027, PostPromoEffectW1\u003d-4.9, PostPromoEffectW2\u003d-2.1, LogoFileName\u003d\u0027mk_20190620182802.jpg\u0027, GHierarchyCode\u003d\u0027\\x00\u0027, DMDGroup\u003d\u002770015711_102\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.1, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u002729152\u0027, #QCCount\u003d418),\n Row(Id\u003d26, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027X5 Retail Group\u0027, StartDate\u003ddatetime.datetime(2019, 4, 1, 19, 53, 42, 377000), EndDate\u003dNone, DemandCode\u003d\u0027\\x00\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d3, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000007, parentId\u003d5000002, RetailTypeName\u003d\u0027\\x00\u0027, FullPathName\u003d\u0027NA \u003e X5 Retail Group\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003d\u0027x5_20190620154739.png\u0027, GHierarchyCode\u003dNone, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d27, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u00275ka\u0027, StartDate\u003ddatetime.datetime(2022, 2, 14, 11, 51, 48, 260000), EndDate\u003dNone, DemandCode\u003d\u00275KA_05_0125\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d14, IsBeforeEnd\u003dNone, DaysEnd\u003d7, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000008, parentId\u003d5000007, RetailTypeName\u003d\u0027Convinience\u0027, FullPathName\u003d\u0027NA \u003e X5 Retail Group \u003e 5ka\u0027, PostPromoEffectW1\u003d-0.1, PostPromoEffectW2\u003d-0.1, LogoFileName\u003d\u00275ка_20190620154829.jpg\u0027, GHierarchyCode\u003d\u00270070015712\u0027, DMDGroup\u003d\u002740078560\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u00272667\u0027, #QCCount\u003d418),\n Row(Id\u003d28, depth\u003d4, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Perekrestok\u0027, StartDate\u003ddatetime.datetime(2022, 5, 4, 12, 10, 4, 407000), EndDate\u003dNone, DemandCode\u003d\u002770015713_202\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d14, IsBeforeEnd\u003dNone, DaysEnd\u003d7, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000009, parentId\u003d5000104, RetailTypeName\u003d\u0027Convinience\u0027, FullPathName\u003d\u0027NA \u003e X5 Retail Group \u003e Big Boxes \u003e Perekrestok\u0027, PostPromoEffectW1\u003d-0.1, PostPromoEffectW2\u003d-0.1, LogoFileName\u003d\u0027perekrestok_logo_circle_20190613152950.png\u0027, GHierarchyCode\u003d\u0027\\x00\u0027, DMDGroup\u003d\u002770015713_202\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u00272671\u0027, #QCCount\u003d418),\n Row(Id\u003d29, depth\u003d4, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Karusel\u0027, StartDate\u003ddatetime.datetime(2022, 5, 4, 12, 15, 58, 540000), EndDate\u003dNone, DemandCode\u003d\u002770015713_201\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d14, IsBeforeEnd\u003dNone, DaysEnd\u003d7, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000010, parentId\u003d5000104, RetailTypeName\u003d\u0027Hypermarket\u0027, FullPathName\u003d\u0027NA \u003e X5 Retail Group \u003e Big Boxes \u003e Karusel\u0027, PostPromoEffectW1\u003d-0.1, PostPromoEffectW2\u003d-0.1, LogoFileName\u003d\u0027i_20190613153058.jpg\u0027, GHierarchyCode\u003d\u0027\\x00\u0027, DMDGroup\u003d\u002770015713_201\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u00272672\u0027, #QCCount\u003d418),\n Row(Id\u003d30, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Dixy\u0027, StartDate\u003ddatetime.datetime(2020, 1, 22, 9, 30, 0, 777000), EndDate\u003dNone, DemandCode\u003d\u0027DIXY_05_0125\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000011, parentId\u003d5000002, RetailTypeName\u003d\u0027\\x00\u0027, FullPathName\u003d\u0027NA \u003e Dixy\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003d\u0027diksilogo_20190620160929.png\u0027, GHierarchyCode\u003d\u00270070015698\u0027, DMDGroup\u003d\u002740077716\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d31, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Dixy\u0027, StartDate\u003ddatetime.datetime(2021, 9, 20, 10, 20, 46, 117000), EndDate\u003dNone, DemandCode\u003d\u0027\\x00\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d1, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000012, parentId\u003d5000011, RetailTypeName\u003d\u0027Convinience\u0027, FullPathName\u003d\u0027NA \u003e Dixy \u003e Dixy\u0027, PostPromoEffectW1\u003d-3.5, PostPromoEffectW2\u003d-1.5, LogoFileName\u003d\u0027дикси_20190620155315.png\u0027, GHierarchyCode\u003d\u00270070015706\u0027, DMDGroup\u003d\u0027\\x00\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.6, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u00272668\u0027, #QCCount\u003d418),\n Row(Id\u003d34, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027LENTA\u0027, StartDate\u003ddatetime.datetime(2021, 9, 30, 14, 50, 11, 457000), EndDate\u003dNone, DemandCode\u003d\u0027LENTA_05_0125\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000015, parentId\u003d5000002, RetailTypeName\u003d\u0027\\x00\u0027, FullPathName\u003d\u0027NA \u003e LENTA\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003d\u0027lenta_logo_20190620161131.jpg\u0027, GHierarchyCode\u003d\u00270070015707\u0027, DMDGroup\u003d\u002740077717\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003dNone, SFAClientCode\u003d\u0027\\x00\u0027, #QCCount\u003d418),\n Row(Id\u003d35, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Lenta\u0027, StartDate\u003ddatetime.datetime(2021, 9, 30, 17, 57, 47, 560000), EndDate\u003dNone, DemandCode\u003d\u002770015707_101\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d2, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000016, parentId\u003d5000015, RetailTypeName\u003d\u0027Hypermarket\u0027, FullPathName\u003d\u0027NA \u003e LENTA \u003e Lenta\u0027, PostPromoEffectW1\u003d-2.1, PostPromoEffectW2\u003d-0.9, LogoFileName\u003d\u0027lenta_logo_20190620161156.jpg\u0027, GHierarchyCode\u003d\u0027\\x00\u0027, DMDGroup\u003d\u002770015707_101\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.8, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u00272673\u0027, #QCCount\u003d418),\n Row(Id\u003d37, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Metro Group\u0027, StartDate\u003ddatetime.datetime(2020, 7, 23, 11, 52, 19, 410000), EndDate\u003dNone, DemandCode\u003d\u0027METRO_05_0125\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000018, parentId\u003d5000002, RetailTypeName\u003d\u0027\\x00\u0027, FullPathName\u003d\u0027NA \u003e Metro Group\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003d\u0027metro_group_20190620165506.png\u0027, GHierarchyCode\u003d\u00270070015708\u0027, DMDGroup\u003d\u002740077718\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d39, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Metro Cash\u0026Carry\u0027, StartDate\u003ddatetime.datetime(2021, 2, 10, 9, 21, 42, 530000), EndDate\u003dNone, DemandCode\u003d\u0027\\x00\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d10, IsBeforeEnd\u003dNone, DaysEnd\u003d15, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000020, parentId\u003d5000018, RetailTypeName\u003d\u0027Hypermarket\u0027, FullPathName\u003d\u0027NA \u003e Metro Group \u003e Metro Cash\u0026Carry\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003d\u0027metro_20190620165855.jpg\u0027, GHierarchyCode\u003d\u0027\\x00\u0027, DMDGroup\u003d\u0027\\x00\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d-0.4, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u00272656\u0027, #QCCount\u003d418),\n Row(Id\u003d40, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Krasnoe\u0026Beloe\u0027, StartDate\u003ddatetime.datetime(2020, 1, 22, 9, 32, 11, 380000), EndDate\u003dNone, DemandCode\u003d\u0027KIB_05_0125\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000021, parentId\u003d5000002, RetailTypeName\u003d\u0027\\x00\u0027, FullPathName\u003d\u0027NA \u003e Krasnoe\u0026Beloe\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003d\u0027kb_20190620171051.jpg\u0027, GHierarchyCode\u003d\u00270070016729\u0027, DMDGroup\u003d\u002740078562\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d41, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Krasnoe\u0026Beloe\u0027, StartDate\u003ddatetime.datetime(2020, 12, 14, 14, 22, 42, 580000), EndDate\u003dNone, DemandCode\u003d\u0027\\x00\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000022, parentId\u003d5000021, RetailTypeName\u003d\u0027Convinience\u0027, FullPathName\u003d\u0027NA \u003e Krasnoe\u0026Beloe \u003e Krasnoe\u0026Beloe\u0027, PostPromoEffectW1\u003d-10.5, PostPromoEffectW2\u003d-4.5, LogoFileName\u003d\u0027kb_20190620171106.jpg\u0027, GHierarchyCode\u003d\u00270070016735\u0027, DMDGroup\u003d\u0027\\x00\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u002710023\u0027, #QCCount\u003d418),\n Row(Id\u003d42, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Auchan Groupe\u0027, StartDate\u003ddatetime.datetime(2022, 9, 5, 11, 34, 36, 253000), EndDate\u003dNone, DemandCode\u003d\u0027\\x00\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d2, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000023, parentId\u003d5000002, RetailTypeName\u003d\u0027\\x00\u0027, FullPathName\u003d\u0027NA \u003e Auchan Groupe\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015697\u0027, DMDGroup\u003d\u0027\\x00\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003dNone, SFAClientCode\u003d\u0027\\x00\u0027, #QCCount\u003d418),\n Row(Id\u003d43, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Auchan\u0027, StartDate\u003ddatetime.datetime(2022, 1, 14, 15, 43, 37, 717000), EndDate\u003dNone, DemandCode\u003d\u0027AUCHAN_05_0125\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000024, parentId\u003d5000023, RetailTypeName\u003d\u0027Hypermarket\u0027, FullPathName\u003d\u0027NA \u003e Auchan Groupe \u003e Auchan\u0027, PostPromoEffectW1\u003d-4.9, PostPromoEffectW2\u003d-2.1, LogoFileName\u003d\u0027auchan_20190620171544.jpg\u0027, GHierarchyCode\u003d\u00270070015704\u0027, DMDGroup\u003d\u002740077715\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d1.0, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u00272655\u0027, #QCCount\u003d418),\n Row(Id\u003d44, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Atak\u0027, StartDate\u003ddatetime.datetime(2022, 1, 14, 15, 44, 47, 640000), EndDate\u003dNone, DemandCode\u003d\u0027ATAK_05_0125\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000025, parentId\u003d5000023, RetailTypeName\u003d\u0027Supermarket\u0027, FullPathName\u003d\u0027NA \u003e Auchan Groupe \u003e Atak\u0027, PostPromoEffectW1\u003d-4.9, PostPromoEffectW2\u003d-2.1, LogoFileName\u003d\u0027Атак_20190620171702.jpg\u0027, GHierarchyCode\u003d\u00270070015705\u0027, DMDGroup\u003d\u002740077714\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d1.0, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u00272654\u0027, #QCCount\u003d418),\n Row(Id\u003d45, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027GK Okey\u0027, StartDate\u003ddatetime.datetime(2020, 1, 22, 9, 33, 30, 490000), EndDate\u003dNone, DemandCode\u003d\u0027OKEY_05_0125\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000026, parentId\u003d5000002, RetailTypeName\u003d\u0027\\x00\u0027, FullPathName\u003d\u0027NA \u003e GK Okey\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015701\u0027, DMDGroup\u003d\u002740077719\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d46, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Okey\u0027, StartDate\u003ddatetime.datetime(2021, 9, 30, 18, 6, 50, 473000), EndDate\u003dNone, DemandCode\u003d\u002770015709_000\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d3, IsBeforeEnd\u003dNone, DaysEnd\u003d2, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000027, parentId\u003d5000026, RetailTypeName\u003d\u0027Hypermarket\u0027, FullPathName\u003d\u0027NA \u003e GK Okey \u003e Okey\u0027, PostPromoEffectW1\u003d-4.9, PostPromoEffectW2\u003d-2.1, LogoFileName\u003d\u0027okey_20190620172723.jpg\u0027, GHierarchyCode\u003d\u00270070015709\u0027, DMDGroup\u003d\u002770015709_000\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.7, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u00272670\u0027, #QCCount\u003d418),\n Row(Id\u003d47, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Fresh Market\u0027, StartDate\u003ddatetime.datetime(2021, 9, 30, 18, 7, 9, 900000), EndDate\u003dNone, DemandCode\u003d\u002770015710_000\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d2, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000028, parentId\u003d5000026, RetailTypeName\u003d\u0027Convinience\u0027, FullPathName\u003d\u0027NA \u003e GK Okey \u003e Fresh Market\u0027, PostPromoEffectW1\u003d-4.9, PostPromoEffectW2\u003d-2.1, LogoFileName\u003d\u0027da_20190620173338.png\u0027, GHierarchyCode\u003d\u00270070015710\u0027, DMDGroup\u003d\u002770015710_000\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.75, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u002718102\u0027, #QCCount\u003d418),\n Row(Id\u003d218, depth\u003d3, Type\u003d\u0027Group Chain\u0027, Name\u003d\u0027Big Boxes\u0027, StartDate\u003ddatetime.datetime(2019, 11, 11, 21, 12, 47, 300000), EndDate\u003dNone, DemandCode\u003d\u0027X5_05_0125\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000104, parentId\u003d5000007, RetailTypeName\u003d\u0027\\x00\u0027, FullPathName\u003d\u0027NA \u003e X5 Retail Group \u003e Big Boxes\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015713\u0027, DMDGroup\u003d\u002740077721\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d249, depth\u003d1, Type\u003d\u0027Group\u0027, Name\u003d\u0027Regions\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 147000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000105, parentId\u003d5000000, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015714\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d250, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Eukanuba\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 147000), EndDate\u003dNone, DemandCode\u003d\u0027\\x00\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000106, parentId\u003d5000105, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Eukanuba\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015715\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d251, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Far East\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 147000), EndDate\u003dNone, DemandCode\u003d\u002740077755\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000107, parentId\u003d5000105, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Far East\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015716\u0027, DMDGroup\u003d\u002740077755\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d252, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Moscow\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 147000), EndDate\u003dNone, DemandCode\u003d\u002740077751\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000108, parentId\u003d5000105, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Moscow\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015717\u0027, DMDGroup\u003d\u002740077751\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d253, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027North\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003d\u002740077752\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000109, parentId\u003d5000105, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e North\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015718\u0027, DMDGroup\u003d\u002740077752\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d254, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Siberia\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003d\u002740077754\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000110, parentId\u003d5000105, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Siberia\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015719\u0027, DMDGroup\u003d\u002740077754\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d255, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027South\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003d\u002740077756\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000111, parentId\u003d5000105, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e South\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015720\u0027, DMDGroup\u003d\u002740077756\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d256, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Ural\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003d\u002740077753\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000112, parentId\u003d5000105, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Ural\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015721\u0027, DMDGroup\u003d\u002740077753\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d257, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Volga\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003d\u002740077757\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000113, parentId\u003d5000105, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Volga\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015722\u0027, DMDGroup\u003d\u002740077757\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d258, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Eukanuba\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000114, parentId\u003d5000106, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Eukanuba \u003e Eukanuba\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015723\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d259, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Far East Indirect\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000115, parentId\u003d5000107, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Far East \u003e Far East Indirect\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015724\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d260, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Bethoven\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000116, parentId\u003d5000108, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Moscow \u003e Bethoven\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015732\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d262, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Konta\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000118, parentId\u003d5000108, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Moscow \u003e Konta\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015730\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d263, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Magnolia\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000119, parentId\u003d5000108, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Moscow \u003e Magnolia\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015729\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d264, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Moscow Indirect\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000120, parentId\u003d5000108, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Moscow \u003e Moscow Indirect\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015725\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d265, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Obi\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000121, parentId\u003d5000108, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Moscow \u003e Obi\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015728\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d266, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Selgross\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000122, parentId\u003d5000108, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Moscow \u003e Selgross\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015727\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d268, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Intertorg\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000124, parentId\u003d5000109, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e North \u003e Intertorg\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070016802\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d269, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027North Indirect\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000125, parentId\u003d5000109, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e North \u003e North Indirect\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015733\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d270, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Petshop\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000126, parentId\u003d5000109, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e North \u003e Petshop\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015734\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d271, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Siberia Indirect\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000127, parentId\u003d5000110, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Siberia \u003e Siberia Indirect\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015735\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d272, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Yarche\u0027, StartDate\u003ddatetime.datetime(2022, 2, 28, 7, 48, 57, 577000), EndDate\u003dNone, DemandCode\u003d\u002770016736 \u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000128, parentId\u003d5000110, RetailTypeName\u003d\u0027Convinience\u0027, FullPathName\u003d\u0027Regions \u003e Siberia \u003e Yarche\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070016736\u0027, DMDGroup\u003d\u002770016736\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u0027\\x00\u0027, #QCCount\u003d418),\n Row(Id\u003d273, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027South Indirect\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000129, parentId\u003d5000111, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e South \u003e South Indirect\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015736\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d274, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Lev\u0027, StartDate\u003ddatetime.datetime(2022, 2, 28, 7, 47, 24, 433000), EndDate\u003dNone, DemandCode\u003d\u002770015738\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000130, parentId\u003d5000112, RetailTypeName\u003d\u0027Convinience\u0027, FullPathName\u003d\u0027Regions \u003e Ural \u003e Lev\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015738\u0027, DMDGroup\u003d\u002770015738\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u0027\\x00\u0027, #QCCount\u003d418),\n Row(Id\u003d275, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Ural Indirect\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000131, parentId\u003d5000112, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Ural \u003e Ural Indirect\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015737\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d276, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Grozd\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000132, parentId\u003d5000113, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Volga \u003e Grozd\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015741\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d277, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Ruble Bum\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000133, parentId\u003d5000113, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Volga \u003e Ruble Bum\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015740\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d278, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Vetna\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000134, parentId\u003d5000113, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Volga \u003e Vetna\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070016817\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d279, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Volga Indirect\u0027, StartDate\u003ddatetime.datetime(2019, 12, 8, 19, 30, 12, 160000), EndDate\u003dNone, DemandCode\u003dNone, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000135, parentId\u003d5000113, RetailTypeName\u003dNone, FullPathName\u003d\u0027Regions \u003e Volga \u003e Volga Indirect\u0027, PostPromoEffectW1\u003dNone, PostPromoEffectW2\u003dNone, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015739\u0027, DMDGroup\u003dNone, IsOnInvoice\u003dNone, DeviationCoefficient\u003dNone, DistrMarkUp\u003dNone, SFAClientCode\u003dNone, #QCCount\u003d418),\n Row(Id\u003d319, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Metro Traders\u0027, StartDate\u003ddatetime.datetime(2021, 2, 10, 9, 22, 21, 943000), EndDate\u003dNone, DemandCode\u003d\u0027\\x00\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d3, IsBeforeEnd\u003dNone, DaysEnd\u003d29, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000136, parentId\u003d5000018, RetailTypeName\u003d\u0027Hypermarket\u0027, FullPathName\u003d\u0027NA \u003e Metro Group \u003e Metro Traders\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003dNone, GHierarchyCode\u003d\u0027\\x00\u0027, DMDGroup\u003d\u0027\\x00\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.8, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u00272656\u0027, #QCCount\u003d418),\n Row(Id\u003d360, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Verny\u0027, StartDate\u003ddatetime.datetime(2021, 7, 2, 18, 19, 3, 930000), EndDate\u003dNone, DemandCode\u003d\u0027Verny\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003dNone, IsBeforeEnd\u003dNone, DaysEnd\u003dNone, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000137, parentId\u003d5000002, RetailTypeName\u003d\u0027\\x00\u0027, FullPathName\u003d\u0027NA \u003e Verny\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070017245\u0027, DMDGroup\u003d\u002770015726\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003dNone, SFAClientCode\u003d\u0027\\x00\u0027, #QCCount\u003d418),\n Row(Id\u003d361, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Verny\u0027, StartDate\u003ddatetime.datetime(2021, 4, 21, 17, 18, 0, 917000), EndDate\u003dNone, DemandCode\u003d\u0027\\x00\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000138, parentId\u003d5000137, RetailTypeName\u003d\u0027Convinience\u0027, FullPathName\u003d\u0027NA \u003e Verny \u003e Verny\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015726\u0027, DMDGroup\u003d\u0027\\x00\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u0027\\x00\u0027, #QCCount\u003d418),\n Row(Id\u003d365, depth\u003d2, Type\u003d\u0027Client\u0027, Name\u003d\u0027Hyperglobus\u0027, StartDate\u003ddatetime.datetime(2021, 9, 6, 9, 7, 34, 247000), EndDate\u003dNone, DemandCode\u003d\u002770015731\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d1, IsBeforeEnd\u003dNone, DaysEnd\u003d10, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000139, parentId\u003d5000002, RetailTypeName\u003d\u0027Hypermarket\u0027, FullPathName\u003d\u0027NA \u003e Hyperglobus\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070017254\u0027, DMDGroup\u003d\u0027\\x00\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003dNone, SFAClientCode\u003d\u0027\\x00\u0027, #QCCount\u003d418),\n Row(Id\u003d366, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Hyperglobus\u0027, StartDate\u003ddatetime.datetime(2021, 9, 27, 12, 46, 54, 67000), EndDate\u003dNone, DemandCode\u003d\u00270070015731\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d16, IsBeforeEnd\u003dNone, DaysEnd\u003d1, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000140, parentId\u003d5000139, RetailTypeName\u003d\u0027Hypermarket\u0027, FullPathName\u003d\u0027NA \u003e Hyperglobus \u003e Hyperglobus\u0027, PostPromoEffectW1\u003d0.0, PostPromoEffectW2\u003d0.0, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070015731\u0027, DMDGroup\u003d\u002770015731\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u0027\\x00\u0027, #QCCount\u003d418),\n Row(Id\u003d378, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Lenta SM\u0027, StartDate\u003ddatetime.datetime(2021, 9, 30, 17, 58, 4, 660000), EndDate\u003dNone, DemandCode\u003d\u002770015707_103\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d2, IsBeforeEnd\u003dNone, DaysEnd\u003d2, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000141, parentId\u003d5000015, RetailTypeName\u003d\u0027Supermarket\u0027, FullPathName\u003d\u0027NA \u003e LENTA \u003e Lenta SM\u0027, PostPromoEffectW1\u003d-2.1, PostPromoEffectW2\u003d-0.9, LogoFileName\u003dNone, GHierarchyCode\u003d\u0027\\x00\u0027, DMDGroup\u003d\u002770015707_103\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.8, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u0027\\x00\u0027, #QCCount\u003d418),\n Row(Id\u003d429, depth\u003d3, Type\u003d\u0027Chain\u0027, Name\u003d\u0027Chizhik\u0027, StartDate\u003ddatetime.datetime(2022, 7, 4, 11, 31, 34, 773000), EndDate\u003dNone, DemandCode\u003d\u002770120281\u0027, IsBaseClient\u003dNone, IsBeforeStart\u003dNone, DaysStart\u003d14, IsBeforeEnd\u003dNone, DaysEnd\u003d7, IsDaysStart\u003dNone, IsDaysEnd\u003dNone, ObjectId\u003d5000142, parentId\u003d5000007, RetailTypeName\u003d\u0027LAR\u0027, FullPathName\u003d\u0027NA \u003e X5 Retail Group \u003e Chizhik\u0027, PostPromoEffectW1\u003d-0.01, PostPromoEffectW2\u003d-0.01, LogoFileName\u003dNone, GHierarchyCode\u003d\u00270070120281\u0027, DMDGroup\u003d\u002770120281\u0027, IsOnInvoice\u003dNone, DeviationCoefficient\u003d0.0, DistrMarkUp\u003d1.0, SFAClientCode\u003d\u0027\\x00\u0027, #QCCount\u003d418)]"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591702_1183366654",
      "id": "paragraph_1663914491293_2139396961",
      "dateCreated": "2022-11-23 11:56:31.702",
      "dateStarted": "2022-12-06 09:46:01.521",
      "dateFinished": "2022-12-06 09:46:01.771",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nlightPromoDF \u003d promoDF\\\n  .where((col(\u0027Disabled\u0027) \u003d\u003d \u0027False\u0027))\\\n  .select(\\\n           col(\u0027Id\u0027).alias(\u0027promoIdCol\u0027)\n          ,col(\u0027Number\u0027).alias(\u0027promoNumber\u0027)\n          ,col(\u0027BrandTechId\u0027).alias(\u0027promoBrandTechId\u0027)\n          ,col(\u0027PromoStatusId\u0027).alias(\u0027promoStatusId\u0027)\n          ,col(\u0027StartDate\u0027).alias(\u0027promoStartDate\u0027)\n          ,col(\u0027EndDate\u0027).alias(\u0027promoEndDate\u0027)\n          ,col(\u0027DispatchesStart\u0027).alias(\u0027promoDispatchesStart\u0027)\n          ,col(\u0027ClientTreeKeyId\u0027).alias(\u0027promoClientTreeKeyId\u0027)\n          ,col(\u0027ClientTreeId\u0027).alias(\u0027promoClientTreeId\u0027)\n          ,col(\u0027IsOnInvoice\u0027).alias(\u0027promoIsOnInvoice\u0027)\n          ,col(\u0027InOut\u0027).alias(\u0027promoInOut\u0027)\n         )\n\nlightPromoDF \u003d lightPromoDF\\\n  .join(activeClientTreeDF, lightPromoDF.promoClientTreeKeyId \u003d\u003d activeClientTreeDF.Id, \u0027inner\u0027)\\\n  .select(\\\n           lightPromoDF[\u0027*\u0027]\n          ,col(\u0027PostPromoEffectW1\u0027).alias(\u0027promoClientPostPromoEffectW1\u0027)\n          ,col(\u0027PostPromoEffectW2\u0027).alias(\u0027promoClientPostPromoEffectW2\u0027)\n          )\n\nlightPromoDF \u003d lightPromoDF\\\n  .withColumn(\u0027promoDemandCode\u0027, lit(getDemandCode(col(\u0027promoClientTreeId\u0027))))\n\nallCalcPlanPromoProductDF \u003d allCalcPlanPromoProductDF\\\n  .join(lightPromoDF, lightPromoDF.promoIdCol \u003d\u003d allCalcPlanPromoProductDF.PromoId, \u0027left\u0027)\\\n  .join(promoStatusDF, promoStatusDF.Id \u003d\u003d lightPromoDF.promoStatusId, \u0027left\u0027)\\\n  .select(\\\n           allCalcPlanPromoProductDF[\u0027*\u0027]\n          ,lightPromoDF[\u0027*\u0027]\n          ,promoStatusDF.SystemName.alias(\u0027promoStatusSystemName\u0027)\n         )\n\ncalcPlanPromoProductDF \u003d allCalcPlanPromoProductDF\\\n  .join(filteredPromoDF, filteredPromoDF.PromoId \u003d\u003d allCalcPlanPromoProductDF.PromoId, \u0027inner\u0027)\\\n  .select(allCalcPlanPromoProductDF[\u0027*\u0027])\\\n  .where(col(\u0027promoStatusSystemName\u0027).isin(*planParametersStatuses))\n\ncalcPlanPromoProductIdsDF \u003d calcPlanPromoProductDF.select(col(\u0027Id\u0027))\nnotCalcPlanPromoProductDF \u003d allCalcPlanPromoProductDF.join(calcPlanPromoProductIdsDF, \u0027Id\u0027, \u0027left_anti\u0027).select(allCalcPlanPromoProductDF[\u0027*\u0027])\n\ncalcPlanPromoProductDF \u003d calcPlanPromoProductDF\\\n  .join(productDF, productDF.Id \u003d\u003d calcPlanPromoProductDF.ProductId, \u0027left\u0027)\\\n  .select(\\\n           calcPlanPromoProductDF[\u0027*\u0027]\n          ,productDF.UOM_PC2Case\n          ,productDF.CaseVolume\n         )\n\ncalcPlanPromoDF \u003d calcPlanPromoDF\\\n  .join(promoStatusDF, promoStatusDF.Id \u003d\u003d calcPlanPromoDF.PromoStatusId, \u0027left\u0027)\\\n  .select(\\\n           calcPlanPromoDF[\u0027*\u0027]\n          ,promoStatusDF.SystemName.alias(\u0027promoStatusSystemName\u0027)\n         )\n\ncalcPlanPromoDF \u003d calcPlanPromoDF\\\n  .join(filteredPromoDF, filteredPromoDF.PromoId \u003d\u003d calcPlanPromoDF.Id, \u0027inner\u0027)\\\n  .select(calcPlanPromoDF[\u0027*\u0027])\\\n  .where(col(\u0027promoStatusSystemName\u0027).isin(*planParametersStatuses))\n\ncalcPlanPromoDF \u003d calcPlanPromoDF\\\n  .join(lightPromoDF, lightPromoDF.promoNumber \u003d\u003d calcPlanPromoDF.Number, \u0027inner\u0027)\\\n  .select(\\\n           calcPlanPromoDF[\u0027*\u0027]\n          ,lightPromoDF.promoClientPostPromoEffectW1\n          ,lightPromoDF.promoClientPostPromoEffectW2\n         )\n\n# print(calcPlanPromoProductDF.count())\n# print(calcPlanPromoDF.count())",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:46:01.822",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591702_412800328",
      "id": "20220811-123048_1257582983",
      "dateCreated": "2022-11-23 11:56:31.702",
      "dateStarted": "2022-12-06 09:46:01.826",
      "dateFinished": "2022-12-06 09:46:02.798",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nnotInOutCalcPlanPromoProductDF \u003d calcPlanPromoProductDF.where(col(\u0027promoInOut\u0027) \u003d\u003d False)\ninOutCalcPlanPromoProductDF \u003d calcPlanPromoProductDF.where(col(\u0027promoInOut\u0027) \u003d\u003d True)\n\nnotInOutCalcPlanPromoDF \u003d calcPlanPromoDF.where(col(\u0027InOut\u0027) \u003d\u003d False)\ninOutCalcPlanPromoDF \u003d calcPlanPromoDF.where(col(\u0027InOut\u0027) \u003d\u003d True)",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:46:02.826",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591702_2008922269",
      "id": "20220811-123048_1457650998",
      "dateCreated": "2022-11-23 11:56:31.702",
      "dateStarted": "2022-12-06 09:46:02.830",
      "dateFinished": "2022-12-06 09:46:03.096",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nimport SET_PROMO_PRODUCT as set_promo_product\nnotInOutCalcPlanPromoProductDF \u003d set_promo_product.run(notInOutCalcPlanPromoDF,notInOutCalcPlanPromoProductDF,promoProductTreeDF,productDF,productTreeDF,assortmentMatrixDF,allProductDF,allProduct01DF,schema)\n",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:46:03.130",
      "progress": 98,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 85.9808,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "select * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027372422\u0027, \u0027376521\u0027, \u0027376528\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027whiskas\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[subbrand] \u003c\u003e \u0027prem\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411875\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411878\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411880\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411882\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411884\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411886\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424465\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424467\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424469\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424503\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424585\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424587\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424589\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424591\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] \u003d \u0027431226\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027perfect fit\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027whiskas\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[subbrand] \u003c\u003e \u0027prem\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411875\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411878\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411880\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411882\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411884\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411886\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424465\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424467\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424469\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424503\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424585\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424587\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424589\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424591\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027282519\u0027, \u0027282528\u0027, \u0027282525\u0027, \u0027282527\u0027, \u0027331539\u0027, \u0027389327\u0027, \u0027404611\u0027, \u0027404624\u0027, \u0027416617\u0027, \u0027430754\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027natures table\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027363126\u0027, \u0027363134\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027385214\u0027, \u0027385220\u0027, \u0027385216\u0027, \u0027385218\u0027, \u0027411884\u0027, \u0027411883\u0027, \u0027411885\u0027, \u0027411886\u0027, \u0027424585\u0027, \u0027424587\u0027, \u0027424589\u0027, \u0027424591\u0027, \u0027424465\u0027, \u0027424469\u0027, \u0027424467\u0027, \u0027424503\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331614\u0027, \u0027331616\u0027, \u0027331618\u0027, \u0027422963\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027436639\u0027, \u0027436637\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027358532\u0027, \u0027358525\u0027, \u0027427678\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[ean_pc] \u003d \u00274660085512599\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027358532\u0027, \u0027358525\u0027, \u0027427678\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027natures table\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027400777\u0027, \u0027400778\u0027, \u0027400779\u0027, \u0027400781\u0027, \u0027400780\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027419058\u0027, \u0027419060\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027296118\u0027, \u0027322719\u0027, \u0027322722\u0027, \u0027322725\u0027, \u0027331620\u0027, \u0027331623\u0027, \u0027331625\u0027, \u0027331627\u0027, \u0027422968\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027372422\u0027, \u0027376521\u0027, \u0027376528\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331471\u0027, \u0027358575\u0027, \u0027331489\u0027, \u0027331491\u0027, \u0027358571\u0027, \u0027358580\u0027, \u0027358578\u0027, \u0027358573\u0027, \u0027416785\u0027, \u0027416783\u0027, \u0027428278\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331673\u0027, \u0027331676\u0027, \u0027389325\u0027, \u0027421180\u0027, \u0027438225\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331673\u0027, \u0027331676\u0027, \u0027389325\u0027, \u0027421180\u0027, \u0027438225\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027372422\u0027, \u0027376521\u0027, \u0027376528\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027295641\u0027, \u0027322714\u0027, \u0027322712\u0027, \u0027322716\u0027, \u0027331547\u0027, \u0027331543\u0027, \u0027331545\u0027, \u0027295659\u0027, \u0027423124\u0027, \u0027423255\u0027, \u0027423256\u0027, \u0027423258\u0027, \u0027423260\u0027, \u0027423261\u0027, \u0027423259\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027376503\u0027, \u0027376510\u0027, \u0027419056\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027358532\u0027, \u0027358525\u0027, \u0027427678\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331471\u0027, \u0027358575\u0027, \u0027331489\u0027, \u0027331491\u0027, \u0027358571\u0027, \u0027358580\u0027, \u0027358578\u0027, \u0027358573\u0027, \u0027416785\u0027, \u0027416783\u0027, \u0027428278\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331471\u0027, \u0027358575\u0027, \u0027331489\u0027, \u0027331491\u0027, \u0027358571\u0027, \u0027358580\u0027, \u0027358578\u0027, \u0027358573\u0027, \u0027416785\u0027, \u0027416783\u0027, \u0027428278\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027376503\u0027, \u0027376510\u0027, \u0027419056\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027pedigree\u0027 and [jupiter].[product].[size] in (\u0027100g\u0027, \u002785g\u0027, \u002780g\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027natures table\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027419058\u0027, \u0027419060\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027whiskas\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[subbrand] \u003c\u003e \u0027prem\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411875\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411878\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411880\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411882\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411884\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411886\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424465\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424467\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424469\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424503\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424585\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424587\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424589\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424591\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027363126\u0027, \u0027363134\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331614\u0027, \u0027331616\u0027, \u0027331618\u0027, \u0027422963\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027376503\u0027, \u0027376510\u0027, \u0027419056\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027400783\u0027, \u0027288016\u0027, \u0027288019\u0027, \u0027288022\u0027, \u0027288017\u0027, \u0027317999\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027436639\u0027, \u0027436637\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027kitekat\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027pedigree\u0027 and [jupiter].[product].[size] in (\u0027100g\u0027, \u002785g\u0027, \u002780g\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027whiskas\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[subbrand] \u003c\u003e \u0027prem\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411875\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411878\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411880\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411882\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411884\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411886\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424465\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424467\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424469\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424503\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424585\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424587\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424589\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424591\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027400777\u0027, \u0027400778\u0027, \u0027400779\u0027, \u0027400781\u0027, \u0027400780\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331673\u0027, \u0027331676\u0027, \u0027389325\u0027, \u0027421180\u0027, \u0027438225\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] \u003d \u0027431226\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027whiskas\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[subbrand] \u003c\u003e \u0027prem\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411875\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411878\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411880\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411882\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411884\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411886\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424465\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424467\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424469\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424503\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424585\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424587\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424589\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424591\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027295641\u0027, \u0027322714\u0027, \u0027322712\u0027, \u0027322716\u0027, \u0027331547\u0027, \u0027331543\u0027, \u0027331545\u0027, \u0027295659\u0027, \u0027423124\u0027, \u0027423255\u0027, \u0027423256\u0027, \u0027423258\u0027, \u0027423260\u0027, \u0027423261\u0027, \u0027423259\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027natures table\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331673\u0027, \u0027331676\u0027, \u0027389325\u0027, \u0027421180\u0027, \u0027438225\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027285242\u0027, \u0027358582\u0027, \u0027295580\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027436639\u0027, \u0027436637\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027282519\u0027, \u0027282528\u0027, \u0027282525\u0027, \u0027282527\u0027, \u0027331539\u0027, \u0027389327\u0027, \u0027404611\u0027, \u0027404624\u0027, \u0027416617\u0027, \u0027430754\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027perfect fit\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027400783\u0027, \u0027288016\u0027, \u0027288019\u0027, \u0027288022\u0027, \u0027288017\u0027, \u0027317999\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027perfect fit\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027419058\u0027, \u0027419060\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027372422\u0027, \u0027376521\u0027, \u0027376528\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027385214\u0027, \u0027385220\u0027, \u0027385216\u0027, \u0027385218\u0027, \u0027411884\u0027, \u0027411883\u0027, \u0027411885\u0027, \u0027411886\u0027, \u0027424585\u0027, \u0027424587\u0027, \u0027424589\u0027, \u0027424591\u0027, \u0027424465\u0027, \u0027424469\u0027, \u0027424467\u0027, \u0027424503\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027385214\u0027, \u0027385220\u0027, \u0027385216\u0027, \u0027385218\u0027, \u0027411884\u0027, \u0027411883\u0027, \u0027411885\u0027, \u0027411886\u0027, \u0027424585\u0027, \u0027424587\u0027, \u0027424589\u0027, \u0027424591\u0027, \u0027424465\u0027, \u0027424469\u0027, \u0027424467\u0027, \u0027424503\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027282519\u0027, \u0027282528\u0027, \u0027282525\u0027, \u0027282527\u0027, \u0027331539\u0027, \u0027389327\u0027, \u0027404611\u0027, \u0027404624\u0027, \u0027416617\u0027, \u0027430754\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027285242\u0027, \u0027358582\u0027, \u0027295580\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027cesar\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027285242\u0027, \u0027358582\u0027, \u0027295580\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027376499\u0027, \u0027376508\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331673\u0027, \u0027331676\u0027, \u0027389325\u0027, \u0027421180\u0027, \u0027438225\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[ean_pc] \u003d \u00274660085512599\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331614\u0027, \u0027331616\u0027, \u0027331618\u0027, \u0027422963\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027282519\u0027, \u0027282528\u0027, \u0027282525\u0027, \u0027282527\u0027, \u0027331539\u0027, \u0027389327\u0027, \u0027404611\u0027, \u0027404624\u0027, \u0027416617\u0027, \u0027430754\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027282519\u0027, \u0027282528\u0027, \u0027282525\u0027, \u0027282527\u0027, \u0027331539\u0027, \u0027389327\u0027, \u0027404611\u0027, \u0027404624\u0027, \u0027416617\u0027, \u0027430754\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027whiskas\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[subbrand] \u003c\u003e \u0027prem\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411875\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411878\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411880\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411882\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411884\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411886\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424465\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424467\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424469\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424503\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424585\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424587\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424589\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424591\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027282519\u0027, \u0027282528\u0027, \u0027282525\u0027, \u0027282527\u0027, \u0027331539\u0027, \u0027389327\u0027, \u0027404611\u0027, \u0027404624\u0027, \u0027416617\u0027, \u0027430754\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027sheba\u0027 and [jupiter].[product].[brandsegtechsub] \u003c\u003e \u0027sheba can\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027care \u0026 treats\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027sheba c\u0026t\u0027 and [jupiter].[product].[size] \u003c\u003e \u002750g\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423097\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423099\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423101\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423103\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435120\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435122\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435124\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435786\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435788\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027435120\u0027, \u0027435122\u0027, \u0027435124\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027423101\u0027, \u0027423097\u0027, \u0027423099\u0027, \u0027423103\u0027, \u0027435786\u0027, \u0027435788\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027400777\u0027, \u0027400778\u0027, \u0027400779\u0027, \u0027400781\u0027, \u0027400780\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027400777\u0027, \u0027400778\u0027, \u0027400779\u0027, \u0027400781\u0027, \u0027400780\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027pedigree\u0027 and [jupiter].[product].[size] in (\u0027100g\u0027, \u002785g\u0027, \u002780g\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027296118\u0027, \u0027322719\u0027, \u0027322722\u0027, \u0027322725\u0027, \u0027331620\u0027, \u0027331623\u0027, \u0027331625\u0027, \u0027331627\u0027, \u0027422968\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027376503\u0027, \u0027376510\u0027, \u0027419056\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027cesar\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331614\u0027, \u0027331616\u0027, \u0027331618\u0027, \u0027422963\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027423101\u0027, \u0027423097\u0027, \u0027423099\u0027, \u0027423103\u0027, \u0027435786\u0027, \u0027435788\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027435120\u0027, \u0027435122\u0027, \u0027435124\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027sheba\u0027 and [jupiter].[product].[brandsegtechsub] \u003c\u003e \u0027sheba can\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027care \u0026 treats\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027sheba c\u0026t\u0027 and [jupiter].[product].[size] \u003c\u003e \u002750g\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423097\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423099\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423101\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423103\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435120\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435122\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435124\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435786\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435788\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027296118\u0027, \u0027322719\u0027, \u0027322722\u0027, \u0027322725\u0027, \u0027331620\u0027, \u0027331623\u0027, \u0027331625\u0027, \u0027331627\u0027, \u0027422968\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflagabbr] \u003d \u0027pft\u0027 and [jupiter].[product].[size] \u003d \u00272.5kg\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] \u003d \u0027431228\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027perfect fit\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027423101\u0027, \u0027423097\u0027, \u0027423099\u0027, \u0027423103\u0027, \u0027435786\u0027, \u0027435788\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027sheba\u0027 and [jupiter].[product].[brandsegtechsub] \u003c\u003e \u0027sheba can\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027care \u0026 treats\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027sheba c\u0026t\u0027 and [jupiter].[product].[size] \u003c\u003e \u002750g\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423097\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423099\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423101\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423103\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435120\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435122\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435124\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435786\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435788\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027435120\u0027, \u0027435122\u0027, \u0027435124\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027pedigree\u0027 and [jupiter].[product].[size] in (\u0027100g\u0027, \u002785g\u0027, \u002780g\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027cesar\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027400783\u0027, \u0027288016\u0027, \u0027288019\u0027, \u0027288022\u0027, \u0027288017\u0027, \u0027317999\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflagabbr] \u003d \u0027pft\u0027 and [jupiter].[product].[size] \u003d \u00272.5kg\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027285242\u0027, \u0027358582\u0027, \u0027295580\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027285242\u0027, \u0027358582\u0027, \u0027295580\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027385214\u0027, \u0027385220\u0027, \u0027385216\u0027, \u0027385218\u0027, \u0027411884\u0027, \u0027411883\u0027, \u0027411885\u0027, \u0027411886\u0027, \u0027424585\u0027, \u0027424587\u0027, \u0027424589\u0027, \u0027424591\u0027, \u0027424465\u0027, \u0027424469\u0027, \u0027424467\u0027, \u0027424503\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027natures table\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027cesar\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[ean_pc] \u003d \u00274660085512599\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027400783\u0027, \u0027288016\u0027, \u0027288019\u0027, \u0027288022\u0027, \u0027288017\u0027, \u0027317999\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027perfect fit\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027423101\u0027, \u0027423097\u0027, \u0027423099\u0027, \u0027423103\u0027, \u0027435786\u0027, \u0027435788\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027sheba\u0027 and [jupiter].[product].[brandsegtechsub] \u003c\u003e \u0027sheba can\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027care \u0026 treats\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027sheba c\u0026t\u0027 and [jupiter].[product].[size] \u003c\u003e \u002750g\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423097\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423099\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423101\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423103\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435120\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435122\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435124\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435786\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435788\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027435120\u0027, \u0027435122\u0027, \u0027435124\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027natures table\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331673\u0027, \u0027331676\u0027, \u0027389325\u0027, \u0027421180\u0027, \u0027438225\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027376499\u0027, \u0027376508\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] \u003d \u0027431228\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027pedigree\u0027 and [jupiter].[product].[size] in (\u0027100g\u0027, \u002785g\u0027, \u002780g\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027whiskas\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[subbrand] \u003c\u003e \u0027prem\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385214\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385216\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385218\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027385220\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411875\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411878\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411880\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411882\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411883\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411884\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411885\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027411886\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424465\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424467\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424469\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424503\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424585\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424587\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424589\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027424591\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027perfect fit\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[brandflagabbr] \u003d \u0027pft\u0027 and [jupiter].[product].[size] \u003d \u00272.5kg\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027385214\u0027, \u0027385220\u0027, \u0027385216\u0027, \u0027385218\u0027, \u0027411884\u0027, \u0027411883\u0027, \u0027411885\u0027, \u0027411886\u0027, \u0027424585\u0027, \u0027424587\u0027, \u0027424589\u0027, \u0027424591\u0027, \u0027424465\u0027, \u0027424469\u0027, \u0027424467\u0027, \u0027424503\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027318901\u0027, \u0027318906\u0027, \u0027317997\u0027, \u0027400767\u0027, \u0027400769\u0027, \u0027400771\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027363126\u0027, \u0027363134\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027perfect fit\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027 and [jupiter].[product].[marketsegment] \u003d \u0027catcare\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027pedigree\u0027 and [jupiter].[product].[size] in (\u0027100g\u0027, \u002785g\u0027, \u002780g\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027435120\u0027, \u0027435122\u0027, \u0027435124\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027sheba\u0027 and [jupiter].[product].[brandsegtechsub] \u003c\u003e \u0027sheba can\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027care \u0026 treats\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027sheba c\u0026t\u0027 and [jupiter].[product].[size] \u003c\u003e \u002750g\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423097\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423099\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423101\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423103\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435120\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435122\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435124\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435786\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435788\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027423101\u0027, \u0027423097\u0027, \u0027423099\u0027, \u0027423103\u0027, \u0027435786\u0027, \u0027435788\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027296118\u0027, \u0027322719\u0027, \u0027322722\u0027, \u0027322725\u0027, \u0027331620\u0027, \u0027331623\u0027, \u0027331625\u0027, \u0027331627\u0027, \u0027422968\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027kitekat\u0027 and [jupiter].[product].[consumerpackformat] \u003d \u0027pouch\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] \u003d \u0027431226\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[brandflagabbr] \u003d \u0027pft\u0027 and [jupiter].[product].[size] \u003d \u00272.5kg\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] \u003d \u0027431228\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027331673\u0027, \u0027331676\u0027, \u0027389325\u0027, \u0027421180\u0027, \u0027438225\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027376499\u0027, \u0027376508\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[brandflag] \u003d \u0027sheba\u0027 and [jupiter].[product].[brandsegtechsub] \u003c\u003e \u0027sheba can\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027care \u0026 treats\u0027 and [jupiter].[product].[productcategory] \u003c\u003e \u0027sheba c\u0026t\u0027 and [jupiter].[product].[size] \u003c\u003e \u002750g\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423097\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423099\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423101\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027423103\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435120\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435122\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435124\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435786\u0027 and [jupiter].[product].[zrep] \u003c\u003e \u0027435788\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027435120\u0027, \u0027435122\u0027, \u0027435124\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027423101\u0027, \u0027423097\u0027, \u0027423099\u0027, \u0027423103\u0027, \u0027435786\u0027, \u0027435788\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027385214\u0027, \u0027385220\u0027, \u0027385216\u0027, \u0027385218\u0027, \u0027411884\u0027, \u0027411883\u0027, \u0027411885\u0027, \u0027411886\u0027, \u0027424585\u0027, \u0027424587\u0027, \u0027424589\u0027, \u0027424591\u0027, \u0027424465\u0027, \u0027424469\u0027, \u0027424467\u0027, \u0027424503\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027419058\u0027, \u0027419060\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027358532\u0027, \u0027358525\u0027, \u0027427678\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027363126\u0027, \u0027363134\u0027)\nselect * from [jupiter].[product] where [jupiter].[product].[ean_pc] \u003d \u00274660085512599\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] \u003d \u0027431228\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] \u003d \u0027431226\u0027\nselect * from [jupiter].[product] where [jupiter].[product].[zrep] in (\u0027385214\u0027, \u0027385220\u0027, \u0027385216\u0027, \u0027385218\u0027, \u0027411884\u0027, \u0027411883\u0027, \u0027411885\u0027, \u0027411886\u0027, \u0027424585\u0027, \u0027424587\u0027, \u0027424589\u0027, \u0027424591\u0027, \u0027424465\u0027, \u0027424469\u0027, \u0027424467\u0027, \u0027424503\u0027)\n910\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d16"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d17"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d18"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d19"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d20"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d21"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d22"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d23"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d24"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d25"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d26"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d27"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d28"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d29"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d30"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d31"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d32"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d33"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d34"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d35"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d36"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d37"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d38"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d39"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d40"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d41"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d42"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d43"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d44"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d45"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d46"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d47"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d48"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d49"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d50"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d51"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d52"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d53"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d54"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d55"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d56"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d57"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d58"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d59"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d60"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d61"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d62"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d63"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d64"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d65"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d66"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d67"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d68"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d69"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d70"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d71"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d72"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d73"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d74"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d75"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d76"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d77"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d78"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d79"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d80"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d81"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d82"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d83"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d84"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d85"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d86"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d87"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d88"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d89"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d90"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d91"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d92"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d93"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d94"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d95"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d96"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d97"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d98"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d99"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d100"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d101"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d102"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d103"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d104"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d105"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d106"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d107"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d108"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d109"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d110"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d111"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d112"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d113"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d114"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d115"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d116"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d117"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d118"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d119"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d120"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d121"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d122"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d123"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d124"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d125"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d126"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d127"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d128"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d129"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d130"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d131"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d132"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d133"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d134"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d135"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d136"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d137"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d138"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d139"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d140"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d141"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d142"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d143"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d144"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d145"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d146"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d147"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d148"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d149"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d150"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d151"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d152"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d153"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d154"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d155"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d167"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591702_327107948",
      "id": "20220811-123048_875351148",
      "dateCreated": "2022-11-23 11:56:31.702",
      "dateStarted": "2022-12-06 09:46:03.134",
      "dateFinished": "2022-12-06 09:46:41.726",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\npromoWithChangedProductDF \u003d notInOutCalcPlanPromoProductDF\\\n  .where(notInOutCalcPlanPromoProductDF.Action.isin(\u0027Added\u0027, \u0027Deleted\u0027)).select(notInOutCalcPlanPromoProductDF.promoNumber)\n\naddedPromoProductDF \u003d notInOutCalcPlanPromoProductDF\\\n  .where(col(\u0027Action\u0027) \u003d\u003d \u0027Added\u0027)\\\n  .groupBy(\u0027PromoId\u0027)\\\n  .agg(concat_ws(\u0027;\u0027, collect_list(col(\u0027ZREP\u0027))).alias(\u0027AddedProductIds\u0027))\n\ndeletedPromoProductDF \u003d notInOutCalcPlanPromoProductDF\\\n  .where(col(\u0027Action\u0027) \u003d\u003d \u0027Deleted\u0027)\\\n  .groupBy(\u0027PromoId\u0027)\\\n  .agg(concat_ws(\u0027;\u0027, collect_list(col(\u0027ZREP\u0027))).alias(\u0027ExcludedProductIds\u0027))\n\nnewProductChangeIncidentDF \u003d addedPromoProductDF\\\n  .join(deletedPromoProductDF, \u0027PromoId\u0027, \u0027outer\u0027)\n\nprint(promoWithChangedProductDF.collect())\n\nunlinkedPromoProductDF \u003d notInOutCalcPlanPromoProductDF.where(notInOutCalcPlanPromoProductDF.Disabled \u003d\u003d True)\n\nnotInOutCalcPlanPromoProductDF \u003d notInOutCalcPlanPromoProductDF\\\n  .where(notInOutCalcPlanPromoProductDF.Disabled \u003d\u003d False)\\\n  .drop(\u0027Number\u0027, \u0027ResultFilteredProductId\u0027, \u0027ResultFilteredZREP\u0027, \u0027pId\u0027)\n\ninOutCalcPlanPromoProductDF \u003d inOutCalcPlanPromoProductDF.withColumn(\u0027Action\u0027, lit(None))",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:46:41.768",
      "progress": 97,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015243), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015371), Row(promoNumber\u003d9799), Row(promoNumber\u003d1015366), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015362), Row(promoNumber\u003d1015162), Row(promoNumber\u003d1015261), Row(promoNumber\u003d1015379), Row(promoNumber\u003d9731), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015374), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015096), Row(promoNumber\u003d1015103), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015158), Row(promoNumber\u003d1015371), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015162), Row(promoNumber\u003d1015170), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015406), Row(promoNumber\u003d1015178), Row(promoNumber\u003d1015239), Row(promoNumber\u003d9820), Row(promoNumber\u003d1015390), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015411), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015176), Row(promoNumber\u003d1015361), Row(promoNumber\u003d9816), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015298), Row(promoNumber\u003d1015298), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015182), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015176), Row(promoNumber\u003d1015074), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015400), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015379), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015099), Row(promoNumber\u003d1015243), Row(promoNumber\u003d1015192), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015194), Row(promoNumber\u003d1015158), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015374), Row(promoNumber\u003d1015395), Row(promoNumber\u003d9815), Row(promoNumber\u003d1015074), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015406), Row(promoNumber\u003d1015218), Row(promoNumber\u003d9795), Row(promoNumber\u003d1015162), Row(promoNumber\u003d13382), Row(promoNumber\u003d1015376), Row(promoNumber\u003d1015066), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015369), Row(promoNumber\u003d1015081), Row(promoNumber\u003d1015089), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015298), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015069), Row(promoNumber\u003d9772), Row(promoNumber\u003d9805), Row(promoNumber\u003d1015298), Row(promoNumber\u003d1015393), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015409), Row(promoNumber\u003d1015067), Row(promoNumber\u003d1015291), Row(promoNumber\u003d1015197), Row(promoNumber\u003d1015184), Row(promoNumber\u003d9820), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015395), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015409), Row(promoNumber\u003d1015194), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015191), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015190), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015090), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015067), Row(promoNumber\u003d1015371), Row(promoNumber\u003d1015189), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015369), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015184), Row(promoNumber\u003d13381), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015103), Row(promoNumber\u003d1015207), Row(promoNumber\u003d9795), Row(promoNumber\u003d1009804), Row(promoNumber\u003d1015398), Row(promoNumber\u003d1015291), Row(promoNumber\u003d1015197), Row(promoNumber\u003d1015068), Row(promoNumber\u003d13382), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015197), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015218), Row(promoNumber\u003d9795), Row(promoNumber\u003d1015261), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015074), Row(promoNumber\u003d1015067), Row(promoNumber\u003d1015251), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015182), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015089), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015197), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015222), Row(promoNumber\u003d1015064), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1009804), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015196), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1016044), Row(promoNumber\u003d9799), Row(promoNumber\u003d1015194), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015351), Row(promoNumber\u003d9772), Row(promoNumber\u003d1015201), Row(promoNumber\u003d1011821), Row(promoNumber\u003d13380), Row(promoNumber\u003d1015243), Row(promoNumber\u003d13383), Row(promoNumber\u003d1015222), Row(promoNumber\u003d1015063), Row(promoNumber\u003d1015360), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015170), Row(promoNumber\u003d1015251), Row(promoNumber\u003d9772), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015374), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015173), Row(promoNumber\u003d1015371), Row(promoNumber\u003d1015081), Row(promoNumber\u003d1015096), Row(promoNumber\u003d9795), Row(promoNumber\u003d1015379), Row(promoNumber\u003d9815), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015413), Row(promoNumber\u003d13380), Row(promoNumber\u003d1015204), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015064), Row(promoNumber\u003d1015187), Row(promoNumber\u003d1015224), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015215), Row(promoNumber\u003d1015099), Row(promoNumber\u003d1015215), Row(promoNumber\u003d1015379), Row(promoNumber\u003d13383), Row(promoNumber\u003d1015379), Row(promoNumber\u003d9772), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015067), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015362), Row(promoNumber\u003d1015065), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015096), Row(promoNumber\u003d1015162), Row(promoNumber\u003d1015063), Row(promoNumber\u003d1015063), Row(promoNumber\u003d1015172), Row(promoNumber\u003d1015360), Row(promoNumber\u003d1015366), Row(promoNumber\u003d1015081), Row(promoNumber\u003d1015064), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015395), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1009573), Row(promoNumber\u003d9772), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015209), Row(promoNumber\u003d1015395), Row(promoNumber\u003d13381), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015184), Row(promoNumber\u003d9799), Row(promoNumber\u003d9761), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015381), Row(promoNumber\u003d1015063), Row(promoNumber\u003d1015162), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015374), Row(promoNumber\u003d1015196), Row(promoNumber\u003d1015222), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015357), Row(promoNumber\u003d13380), Row(promoNumber\u003d1015196), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015360), Row(promoNumber\u003d1015180), Row(promoNumber\u003d1015159), Row(promoNumber\u003d1015081), Row(promoNumber\u003d1015212), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015182), Row(promoNumber\u003d1015190), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015385), Row(promoNumber\u003d1015194), Row(promoNumber\u003d9643), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015398), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015360), Row(promoNumber\u003d1015403), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1011821), Row(promoNumber\u003d13380), Row(promoNumber\u003d9772), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015224), Row(promoNumber\u003d1015096), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015197), Row(promoNumber\u003d1015186), Row(promoNumber\u003d1015187), Row(promoNumber\u003d1015418), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015070), Row(promoNumber\u003d1015360), Row(promoNumber\u003d1015302), Row(promoNumber\u003d1015096), Row(promoNumber\u003d1015215), Row(promoNumber\u003d1015192), Row(promoNumber\u003d9799), Row(promoNumber\u003d9795), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015374), Row(promoNumber\u003d1015182), Row(promoNumber\u003d9765), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015196), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015192), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015068), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015067), Row(promoNumber\u003d1015291), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015413), Row(promoNumber\u003d13381), Row(promoNumber\u003d1015239), Row(promoNumber\u003d1015068), Row(promoNumber\u003d1015353), Row(promoNumber\u003d1015162), Row(promoNumber\u003d1015192), Row(promoNumber\u003d1015065), Row(promoNumber\u003d1015185), Row(promoNumber\u003d1015197), Row(promoNumber\u003d1015384), Row(promoNumber\u003d1015403), Row(promoNumber\u003d1015196), Row(promoNumber\u003d1015371), Row(promoNumber\u003d1015189), Row(promoNumber\u003d1015187), Row(promoNumber\u003d1015411), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015222), Row(promoNumber\u003d1015103), Row(promoNumber\u003d9820), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015366), Row(promoNumber\u003d9805), Row(promoNumber\u003d13382), Row(promoNumber\u003d1015261), Row(promoNumber\u003d1015212), Row(promoNumber\u003d1015400), Row(promoNumber\u003d1015175), Row(promoNumber\u003d13380), Row(promoNumber\u003d1015068), Row(promoNumber\u003d1015400), Row(promoNumber\u003d1015190), Row(promoNumber\u003d1015390), Row(promoNumber\u003d1015192), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015371), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015190), Row(promoNumber\u003d13382), Row(promoNumber\u003d9815), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015366), Row(promoNumber\u003d1015188), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015406), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015400), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015187), Row(promoNumber\u003d1015063), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015063), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015196), Row(promoNumber\u003d1015178), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015239), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015182), Row(promoNumber\u003d1015197), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015188), Row(promoNumber\u003d1015261), Row(promoNumber\u003d1015411), Row(promoNumber\u003d9820), Row(promoNumber\u003d1015395), Row(promoNumber\u003d1015088), Row(promoNumber\u003d1015182), Row(promoNumber\u003d9795), Row(promoNumber\u003d13381), Row(promoNumber\u003d13381), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015403), Row(promoNumber\u003d9815), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015302), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015302), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015239), Row(promoNumber\u003d1015374), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015096), Row(promoNumber\u003d1015194), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015376), Row(promoNumber\u003d9731), Row(promoNumber\u003d13384), Row(promoNumber\u003d9761), Row(promoNumber\u003d1015379), Row(promoNumber\u003d9820), Row(promoNumber\u003d1015371), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015064), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015239), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015074), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015184), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015162), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015187), Row(promoNumber\u003d1015068), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015197), Row(promoNumber\u003d9772), Row(promoNumber\u003d1015176), Row(promoNumber\u003d1015362), Row(promoNumber\u003d9815), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015196), Row(promoNumber\u003d1015376), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015096), Row(promoNumber\u003d1015381), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015393), Row(promoNumber\u003d1015239), Row(promoNumber\u003d1015209), Row(promoNumber\u003d1015190), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015188), Row(promoNumber\u003d1015186), Row(promoNumber\u003d1015231), Row(promoNumber\u003d1015207), Row(promoNumber\u003d9815), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015291), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015239), Row(promoNumber\u003d1015298), Row(promoNumber\u003d1015090), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015351), Row(promoNumber\u003d9761), Row(promoNumber\u003d1015162), Row(promoNumber\u003d1015162), Row(promoNumber\u003d1015186), Row(promoNumber\u003d1015419), Row(promoNumber\u003d1015261), Row(promoNumber\u003d1015376), Row(promoNumber\u003d9799), Row(promoNumber\u003d1015395), Row(promoNumber\u003d1015351), Row(promoNumber\u003d13383), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015374), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015222), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015400), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015419), Row(promoNumber\u003d1015374), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015209), Row(promoNumber\u003d1015096), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015067), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015232), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015395), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015190), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015184), Row(promoNumber\u003d13381), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015203), Row(promoNumber\u003d13382), Row(promoNumber\u003d9765), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015298), Row(promoNumber\u003d1015371), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015159), Row(promoNumber\u003d1009804), Row(promoNumber\u003d1015184), Row(promoNumber\u003d9815), Row(promoNumber\u003d1015064), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015064), Row(promoNumber\u003d1015063), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015298), Row(promoNumber\u003d1015171), Row(promoNumber\u003d1015070), Row(promoNumber\u003d1015189), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015187), Row(promoNumber\u003d1015230), Row(promoNumber\u003d1015407), Row(promoNumber\u003d1015182), Row(promoNumber\u003d1015081), Row(promoNumber\u003d1015395), Row(promoNumber\u003d1015400), Row(promoNumber\u003d1015362), Row(promoNumber\u003d1015162), Row(promoNumber\u003d13381), Row(promoNumber\u003d1015239), Row(promoNumber\u003d1015362), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015103), Row(promoNumber\u003d1015409), Row(promoNumber\u003d1015176), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015379), Row(promoNumber\u003d9815), Row(promoNumber\u003d1015162), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015262), Row(promoNumber\u003d13381), Row(promoNumber\u003d1015384), Row(promoNumber\u003d1015395), Row(promoNumber\u003d1015400), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015189), Row(promoNumber\u003d9765), Row(promoNumber\u003d9643), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015067), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015395), Row(promoNumber\u003d1015068), Row(promoNumber\u003d1015403), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015407), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1009804), Row(promoNumber\u003d1015201), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015400), Row(promoNumber\u003d1015064), Row(promoNumber\u003d1015191), Row(promoNumber\u003d13384), Row(promoNumber\u003d1015169), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015184), Row(promoNumber\u003d9772), Row(promoNumber\u003d1015222), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015196), Row(promoNumber\u003d1015064), Row(promoNumber\u003d1015351), Row(promoNumber\u003d13381), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015353), Row(promoNumber\u003d1015418), Row(promoNumber\u003d1015395), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015176), Row(promoNumber\u003d1015096), Row(promoNumber\u003d1015291), Row(promoNumber\u003d1015063), Row(promoNumber\u003d1015261), Row(promoNumber\u003d13380), Row(promoNumber\u003d1015357), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015411), Row(promoNumber\u003d1015231), Row(promoNumber\u003d1015096), Row(promoNumber\u003d1009573), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015374), Row(promoNumber\u003d1015376), Row(promoNumber\u003d1015068), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015232), Row(promoNumber\u003d13382), Row(promoNumber\u003d1015366), Row(promoNumber\u003d1015197), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015096), Row(promoNumber\u003d1015376), Row(promoNumber\u003d9765), Row(promoNumber\u003d1015262), Row(promoNumber\u003d1015411), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015196), Row(promoNumber\u003d1015063), Row(promoNumber\u003d9799), Row(promoNumber\u003d9799), Row(promoNumber\u003d1015400), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015239), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015182), Row(promoNumber\u003d1015387), Row(promoNumber\u003d1015197), Row(promoNumber\u003d1015360), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015197), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015243), Row(promoNumber\u003d1015182), Row(promoNumber\u003d1015357), Row(promoNumber\u003d9765), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015065), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015068), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015261), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015417), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015194), Row(promoNumber\u003d9731), Row(promoNumber\u003d9805), Row(promoNumber\u003d13380), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015189), Row(promoNumber\u003d1015067), Row(promoNumber\u003d13381), Row(promoNumber\u003d1015302), Row(promoNumber\u003d1015212), Row(promoNumber\u003d1015158), Row(promoNumber\u003d1015176), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015089), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015188), Row(promoNumber\u003d1015250), Row(promoNumber\u003d1015176), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015074), Row(promoNumber\u003d1015187), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015400), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015413), Row(promoNumber\u003d13381), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015371), Row(promoNumber\u003d1015181), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015298), Row(promoNumber\u003d9816), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015069), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015362), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015066), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015191), Row(promoNumber\u003d1015176), Row(promoNumber\u003d1015302), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015064), Row(promoNumber\u003d1015366), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015200), Row(promoNumber\u003d1015192), Row(promoNumber\u003d9815), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1009804), Row(promoNumber\u003d1015376), Row(promoNumber\u003d1015261), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015197), Row(promoNumber\u003d1015262), Row(promoNumber\u003d9820), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015291), Row(promoNumber\u003d1015298), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015298), Row(promoNumber\u003d1015239), Row(promoNumber\u003d1015362), Row(promoNumber\u003d1015187), Row(promoNumber\u003d1015353), Row(promoNumber\u003d1015192), Row(promoNumber\u003d1015374), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015191), Row(promoNumber\u003d9795), Row(promoNumber\u003d1015099), Row(promoNumber\u003d1016044), Row(promoNumber\u003d1015261), Row(promoNumber\u003d1015261), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015291), Row(promoNumber\u003d1015360), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015298), Row(promoNumber\u003d1015064), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015207), Row(promoNumber\u003d9761), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015388), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015063), Row(promoNumber\u003d1015185), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015369), Row(promoNumber\u003d13381), Row(promoNumber\u003d1015376), Row(promoNumber\u003d9643), Row(promoNumber\u003d1015411), Row(promoNumber\u003d1015381), Row(promoNumber\u003d1015361), Row(promoNumber\u003d9815), Row(promoNumber\u003d1015393), Row(promoNumber\u003d1015063), Row(promoNumber\u003d13384), Row(promoNumber\u003d9795), Row(promoNumber\u003d1015218), Row(promoNumber\u003d9731), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015181), Row(promoNumber\u003d1015239), Row(promoNumber\u003d1015360), Row(promoNumber\u003d1015386), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015351), Row(promoNumber\u003d13381), Row(promoNumber\u003d1015200), Row(promoNumber\u003d1015187), Row(promoNumber\u003d1015190), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015222), Row(promoNumber\u003d9772), Row(promoNumber\u003d1015371), Row(promoNumber\u003d9772), Row(promoNumber\u003d1015180), Row(promoNumber\u003d1015291), Row(promoNumber\u003d1015162), Row(promoNumber\u003d1015218), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015190), Row(promoNumber\u003d1015351), Row(promoNumber\u003d1015066), Row(promoNumber\u003d9816), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015371), Row(promoNumber\u003d1015070), Row(promoNumber\u003d1015202), Row(promoNumber\u003d1015074), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015418), Row(promoNumber\u003d1015379), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015291), Row(promoNumber\u003d1015184), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015361), Row(promoNumber\u003d9772), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015187), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015298), Row(promoNumber\u003d1015222), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015385), Row(promoNumber\u003d9816), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015181), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015395), Row(promoNumber\u003d1015413), Row(promoNumber\u003d1015361), Row(promoNumber\u003d1015207), Row(promoNumber\u003d1015185), Row(promoNumber\u003d1015187), Row(promoNumber\u003d1015175), Row(promoNumber\u003d1015411), Row(promoNumber\u003d1015075), Row(promoNumber\u003d1015398), Row(promoNumber\u003d1015066), Row(promoNumber\u003d1015351), Row(promoNumber\u003d9772), Row(promoNumber\u003d9815), Row(promoNumber\u003d1015169), Row(promoNumber\u003d1015069), Row(promoNumber\u003d1015362), Row(promoNumber\u003d1011821), Row(promoNumber\u003d1015250), Row(promoNumber\u003d1015376), Row(promoNumber\u003d1015400), Row(promoNumber\u003d1015192), Row(promoNumber\u003d1015231), Row(promoNumber\u003d9820), Row(promoNumber\u003d1015250), Row(promoNumber\u003d1015411)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d179"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_698161299",
      "id": "20220811-123048_209176770",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:46:41.772",
      "dateFinished": "2022-12-06 09:47:06.133",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nserviceInfoDF \u003d serviceInfoDF\\\n  .withColumn(\u0027Value\u0027, when(col(\u0027Name\u0027) \u003d\u003d \u0027PROMO_NUMBERS_FOR_REAPPROVAL\u0027, \u0027;\u0027.join([str(elem.promoNumber) for elem in promoWithChangedProductDF.collect()]))\\\n              .otherwise(col(\u0027Value\u0027)))",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:47:06.196",
      "progress": 18,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d180"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_560606463",
      "id": "20220811-123048_1869461954",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:47:06.199",
      "dateFinished": "2022-12-06 09:47:09.491",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\ntempDF \u003d calcPlanPromoProductDF\\\n  .select(\\\n           calcPlanPromoProductDF.promoIdCol.alias(\u0027_promoIdCol\u0027)\n          ,calcPlanPromoProductDF.promoNumber.alias(\u0027_promoNumber\u0027)\n          ,calcPlanPromoProductDF.promoBrandTechId.alias(\u0027_promoBrandTechId\u0027)\n          ,calcPlanPromoProductDF.promoStatusId.alias(\u0027_promoStatusId\u0027)\n          ,calcPlanPromoProductDF.promoStartDate.alias(\u0027_promoStartDate\u0027)\n          ,calcPlanPromoProductDF.promoEndDate.alias(\u0027_promoEndDate\u0027)\n          ,calcPlanPromoProductDF.promoDispatchesStart.alias(\u0027_promoDispatchesStart\u0027)\n          ,calcPlanPromoProductDF.promoClientTreeKeyId.alias(\u0027_promoClientTreeKeyId\u0027)\n          ,calcPlanPromoProductDF.promoClientTreeId.alias(\u0027_promoClientTreeId\u0027)\n          ,calcPlanPromoProductDF.promoIsOnInvoice.alias(\u0027_promoIsOnInvoice\u0027)\n          ,calcPlanPromoProductDF.promoInOut.alias(\u0027_promoInOut\u0027)\n          ,calcPlanPromoProductDF.promoClientPostPromoEffectW1.alias(\u0027_promoClientPostPromoEffectW1\u0027)\n          ,calcPlanPromoProductDF.promoClientPostPromoEffectW2.alias(\u0027_promoClientPostPromoEffectW2\u0027)\n          ,calcPlanPromoProductDF.promoDemandCode.alias(\u0027_promoDemandCode\u0027)\n          ,calcPlanPromoProductDF.promoStatusSystemName.alias(\u0027_promoStatusSystemName\u0027)\n         )\\\n  .dropDuplicates()\n\ncols \u003d notInOutCalcPlanPromoProductDF.columns\n\nnotInOutCalcPlanPromoProductDF \u003d notInOutCalcPlanPromoProductDF\\\n  .join(tempDF, tempDF._promoNumber \u003d\u003d notInOutCalcPlanPromoProductDF.promoNumber, \u0027left\u0027)\\\n  .withColumn(\u0027promoIdCol\u0027, when(notInOutCalcPlanPromoProductDF.promoIdCol.isNull(),tempDF._promoIdCol)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoIdCol))\\\n  .withColumn(\u0027promoBrandTechId\u0027, when(notInOutCalcPlanPromoProductDF.promoBrandTechId.isNull(),tempDF._promoBrandTechId)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoBrandTechId))\\\n  .withColumn(\u0027promoStatusId\u0027, when(notInOutCalcPlanPromoProductDF.promoStatusId.isNull(),tempDF._promoStatusId)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoStatusId))\\\n  .withColumn(\u0027promoStartDate\u0027, when(notInOutCalcPlanPromoProductDF.promoStartDate.isNull(),tempDF._promoStartDate)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoStartDate))\\\n  .withColumn(\u0027promoEndDate\u0027, when(notInOutCalcPlanPromoProductDF.promoEndDate.isNull(),tempDF._promoEndDate)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoEndDate))\\\n  .withColumn(\u0027promoDispatchesStart\u0027, when(notInOutCalcPlanPromoProductDF.promoDispatchesStart.isNull(),tempDF._promoDispatchesStart)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoDispatchesStart))\\\n  .withColumn(\u0027promoClientTreeKeyId\u0027, when(notInOutCalcPlanPromoProductDF.promoClientTreeKeyId.isNull(),tempDF._promoClientTreeKeyId)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoClientTreeKeyId))\\\n  .withColumn(\u0027promoClientTreeId\u0027, when(notInOutCalcPlanPromoProductDF.promoClientTreeId.isNull(),tempDF._promoClientTreeId)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoClientTreeId))\\\n  .withColumn(\u0027promoIsOnInvoice\u0027, when(notInOutCalcPlanPromoProductDF.promoIsOnInvoice.isNull(),tempDF._promoIsOnInvoice)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoIsOnInvoice))\\\n  .withColumn(\u0027promoInOut\u0027, when(notInOutCalcPlanPromoProductDF.promoInOut.isNull(),tempDF._promoInOut)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoInOut))\\\n  .withColumn(\u0027promoClientPostPromoEffectW1\u0027, when(notInOutCalcPlanPromoProductDF.promoClientPostPromoEffectW1.isNull(),tempDF._promoClientPostPromoEffectW1)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoClientPostPromoEffectW1))\\\n  .withColumn(\u0027promoClientPostPromoEffectW2\u0027, when(notInOutCalcPlanPromoProductDF.promoClientPostPromoEffectW2.isNull(),tempDF._promoClientPostPromoEffectW2)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoClientPostPromoEffectW2))\\\n  .withColumn(\u0027promoDemandCode\u0027, when(notInOutCalcPlanPromoProductDF.promoDemandCode.isNull(),tempDF._promoDemandCode)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoDemandCode))\\\n  .withColumn(\u0027promoStatusSystemName\u0027, when(notInOutCalcPlanPromoProductDF.promoStatusSystemName.isNull(),tempDF._promoStatusSystemName)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.promoStatusSystemName))\\\n  .select(cols)\n\ntempProductDF \u003d productDF\\\n  .select(\\\n           productDF.Id.alias(\u0027_Id\u0027)\n          ,productDF.ZREP.alias(\u0027_ZREP\u0027)\n          ,productDF.EAN_Case.alias(\u0027_EAN_Case\u0027)\n          ,productDF.ProductEN.alias(\u0027_ProductEN\u0027)\n          ,productDF.EAN_PC.alias(\u0027_EAN_PC\u0027)\n          ,productDF.UOM_PC2Case.alias(\u0027_UOM_PC2Case\u0027)\n         )\n\nnotInOutCalcPlanPromoProductDF \u003d notInOutCalcPlanPromoProductDF\\\n  .join(tempProductDF, tempProductDF._Id \u003d\u003d notInOutCalcPlanPromoProductDF.ProductId, \u0027left\u0027)\\\n  .withColumn(\u0027ZREP\u0027, when(notInOutCalcPlanPromoProductDF.ZREP.isNull(),tempProductDF._ZREP)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.ZREP))\\\n  .withColumn(\u0027EAN_Case\u0027, when(notInOutCalcPlanPromoProductDF.EAN_Case.isNull(),tempProductDF._EAN_Case)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.EAN_Case))\\\n  .withColumn(\u0027ProductEN\u0027, when(notInOutCalcPlanPromoProductDF.ProductEN.isNull(),tempProductDF._ProductEN)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.ProductEN))\\\n  .withColumn(\u0027EAN_PC\u0027, when(notInOutCalcPlanPromoProductDF.EAN_PC.isNull(),tempProductDF._EAN_PC)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.EAN_PC))\\\n  .withColumn(\u0027UOM_PC2Case\u0027, when(notInOutCalcPlanPromoProductDF.UOM_PC2Case.isNull(),tempProductDF._UOM_PC2Case)\\\n          .otherwise(notInOutCalcPlanPromoProductDF.UOM_PC2Case))\\\n  .select(cols)",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:47:09.502",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_275841777",
      "id": "20220811-123048_918352212",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:47:09.506",
      "dateFinished": "2022-12-06 09:47:10.880",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\ncalcPlanPromoProductDF \u003d notInOutCalcPlanPromoProductDF.union(inOutCalcPlanPromoProductDF)\ncalcPlanPromoDF \u003d notInOutCalcPlanPromoDF.union(inOutCalcPlanPromoDF)\n\nallCalcPlanPromoDF \u003d allCalcPlanPromoDF\\\n  .join(promoStatusDF, promoStatusDF.Id \u003d\u003d allCalcPlanPromoDF.PromoStatusId, \u0027left\u0027)\\\n  .select(\\\n           allCalcPlanPromoDF[\u0027*\u0027]\n          ,promoStatusDF.SystemName.alias(\u0027promoStatusSystemName\u0027)\n         )",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:47:10.907",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_341085159",
      "id": "20220811-123048_1688273987",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:47:10.911",
      "dateFinished": "2022-12-06 09:47:11.329",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n\nimport PLAN_PRODUCT_PARAMS_CALCULATION_PROCESS as plan_product_params_calculation_process\ncalcPlanPromoProductDF,calcPlanPromoDF,allCalcPlanPromoDF,logPromoProductDF \u003d plan_product_params_calculation_process.run(calcPlanPromoProductDF,planParamsPriceListDF,planParamsBaselineDF,calcPlanPromoDF,allCalcPlanPromoDF,planParamsSharesDF,datesDF,planParamsCorrectionDF,planParamsIncrementalDF,planParametersStatuses,promoProductCols)\n",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:47:11.412",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Plan product parameters calculation completed!\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d200"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_1021798231",
      "id": "20220811-123048_1445130701",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:47:11.415",
      "dateFinished": "2022-12-06 09:47:52.909",
      "status": "FINISHED"
    },
    {
      "text": "%md\n####*Promo support calculation*",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:52:52.344",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e####\u003cem\u003ePromo support calculation\u003c/em\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_630832880",
      "id": "20220811-123048_1417933154",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:52:52.348",
      "dateFinished": "2022-12-06 09:52:52.352",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n@udf\ndef isStatusInList(list):\n  c \u003d [x for x in list if x in [\u0027DraftPublished\u0027,\u0027OnApproval\u0027,\u0027Approved\u0027,\u0027Planned\u0027,\u0027Started\u0027,\u0027Finished\u0027]]\n  return len(c) \u003e 0\n\n@udf\ndef isStatusInFinishedClosedList(list):\n  if any(x in list for x in [\u0027DraftPublished\u0027,\u0027OnApproval\u0027,\u0027Approved\u0027,\u0027Planned\u0027,\u0027Started\u0027]):\n    return False\n  else:\n    return True",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:52:52.448",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_1121292408",
      "id": "20220811-123048_98868471",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:52:52.452",
      "dateFinished": "2022-12-06 09:52:52.668",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\ncalcPlanSupportPromoDF \u003d allCalcPlanPromoDF\\\n  .where(~col(\u0027promoStatusSystemName\u0027).isin(*notCheckPromoStatusList))\n\ncalcPlanSupportPromoIdsDF \u003d calcPlanSupportPromoDF.select(col(\u0027Id\u0027))\nnotCalcPlanSupportPromoDF \u003d allCalcPlanPromoDF.join(calcPlanSupportPromoIdsDF, \u0027Id\u0027, \u0027left_anti\u0027).select(allCalcPlanPromoDF[\u0027*\u0027])\n\nallPromoSupportDF \u003d allCalcPlanPromoDF\\\n  .join(activePromoSupportPromoDF, activePromoSupportPromoDF.PromoId \u003d\u003d allCalcPlanPromoDF.Id, \u0027inner\u0027)\\\n  .join(promoSupportDF, promoSupportDF.Id \u003d\u003d activePromoSupportPromoDF.PromoSupportId, \u0027inner\u0027)\\\n  .select(\\\n           promoSupportDF.Id.alias(\u0027psId\u0027)\n          ,promoSupportDF.BudgetSubItemId\n          ,promoSupportDF.Number.alias(\u0027promoSupportNumber\u0027)\n          ,promoSupportDF.PlanCostTE.cast(DecimalType(30,6))\n          ,promoSupportDF.PlanProdCost.cast(DecimalType(30,6))\n          ,allCalcPlanPromoDF.promoStatusSystemName\n        )\\\n  .groupBy(\u0027psId\u0027,\u0027BudgetSubItemId\u0027,\u0027promoSupportNumber\u0027,\u0027PlanCostTE\u0027,\u0027PlanProdCost\u0027)\\\n  .agg(collect_list(col(\u0027promoStatusSystemName\u0027)).alias(\u0027promoStatuses\u0027))\\\n  .withColumn(\u0027isInList\u0027, isStatusInList(col(\u0027promoStatuses\u0027)).cast(BooleanType()))\\\n  .withColumn(\u0027onlyFinishedClosed\u0027, isStatusInFinishedClosedList(col(\u0027promoStatuses\u0027)).cast(BooleanType()))\\\n  .where(col(\u0027isInList\u0027) \u003d\u003d True)\\\n  .drop(\u0027promoStatuses\u0027,\u0027isInList\u0027)\n\nallBtlDF \u003d allCalcPlanPromoDF\\\n  .join(btlPromoDF, btlPromoDF.PromoId \u003d\u003d allCalcPlanPromoDF.Id, \u0027inner\u0027)\\\n  .join(btlDF, btlDF.Id \u003d\u003d btlPromoDF.BTLId, \u0027inner\u0027)\\\n  .select(\\\n           btlDF.Id.alias(\u0027bId\u0027)\n          ,btlDF.Number.alias(\u0027btlNumber\u0027)\n          ,btlDF.PlanBTLTotal.cast(DecimalType(30,6))\\\n          ,allCalcPlanPromoDF.promoStatusSystemName\n         )\\\n  .groupBy(\u0027bId\u0027,\u0027btlNumber\u0027,\u0027PlanBTLTotal\u0027)\\\n  .agg(collect_list(col(\u0027promoStatusSystemName\u0027)).alias(\u0027promoStatuses\u0027))\\\n  .withColumn(\u0027isInList\u0027, isStatusInList(col(\u0027promoStatuses\u0027)).cast(BooleanType()))\\\n  .withColumn(\u0027onlyFinishedClosed\u0027, isStatusInFinishedClosedList(col(\u0027promoStatuses\u0027)).cast(BooleanType()))\\\n  .where(col(\u0027isInList\u0027) \u003d\u003d True)\\\n  .drop(\u0027promoStatuses\u0027,\u0027isInList\u0027)",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:52:52.752",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_1245410844",
      "id": "20220811-123048_1770717972",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:52:52.756",
      "dateFinished": "2022-12-06 09:52:54.281",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n\nimport PLAN_SUPPORT_PARAMS_CALCULATION_PROCESS as plan_support_params_calculation_process\ncalcPlanSupportPromoDF,allPromoSupportPromoDF\u003d plan_support_params_calculation_process.run(allPromoSupportDF,activePromoSupportPromoDF,calcPlanSupportPromoDF,allBtlDF,budgetItemDF,budgetSubItemDF,promoSupportPromoCols,btlPromoDF)",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:52:54.357",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Plan support parameters calculation completed!\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d254"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d266"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d278"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d290"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d302"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d314"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d326"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d338"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d347"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_612628491",
      "id": "20220811-123048_677784433",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:52:54.361",
      "dateFinished": "2022-12-06 09:56:50.746",
      "status": "FINISHED"
    },
    {
      "text": "%md\n####*Plan promo parameters calculation*",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:56:50.778",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e####\u003cem\u003ePlan promo parameters calculation\u003c/em\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_555002981",
      "id": "20220811-123048_1663424510",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:56:50.782",
      "dateFinished": "2022-12-06 09:56:50.785",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nallCalcPlanPromoDF \u003d calcPlanSupportPromoDF.union(notCalcPlanSupportPromoDF)\n\ncalcPlanPromoDF \u003d allCalcPlanPromoDF\\\n  .join(brandTechDF, brandTechDF.Id \u003d\u003d allCalcPlanPromoDF.BrandTechId, \u0027left\u0027)\\\n  .select(\\\n           allCalcPlanPromoDF[\u0027*\u0027]\n          ,brandTechDF.BrandsegTechsub.alias(\u0027promoBrandTechName\u0027)\n         )\\\n  .where(col(\u0027promoStatusSystemName\u0027).isin(*planParametersStatuses))\n\nnotCalcPlanPromoDF \u003d allCalcPlanPromoDF\\\n  .where(~col(\u0027promoStatusSystemName\u0027).isin(*planParametersStatuses))\n\ncalcPlanPromoDF \u003d calcPlanPromoDF\\\n  .join(lightPromoDF, lightPromoDF.promoIdCol \u003d\u003d calcPlanPromoDF.Id, \u0027left\u0027)\\\n  .select(\\\n           calcPlanPromoDF[\u0027*\u0027]\n          ,lightPromoDF.promoClientPostPromoEffectW1\n          ,lightPromoDF.promoClientPostPromoEffectW2\n         )",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:56:50.881",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_313464399",
      "id": "20220811-123048_1107815497",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:56:50.885",
      "dateFinished": "2022-12-06 09:56:52.109",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n\nimport PLAN_PROMO_PARAMS_CALCULATION_PROCESS as plan_promo_params_calculation_process\ncalcPlanPromoDF,logCOGS,logTI\u003d plan_promo_params_calculation_process.run(clientTreeDF,cogsDF,brandTechDF,cogsTnDF,tiDF,ratiShopperDF,calcPlanPromoDF,promoDF)",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:56:52.186",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Plan promo parameters calculation completed!\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d348"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d351"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d354"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d357"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d360"
            },
            {
              "jobUrl": "http://rc1a-dataproc-d-bam57uve6lsefmrc.mdb.yandexcloud.net:43577/jobs/job?id\u003d361"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591705_1250208482",
      "id": "20220811-123048_1931855038",
      "dateCreated": "2022-11-23 11:56:31.705",
      "dateStarted": "2022-12-06 09:56:52.190",
      "dateFinished": "2022-12-06 09:57:04.010",
      "status": "FINISHED"
    },
    {
      "text": "%md\n####*Result*",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:57:04.101",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e####\u003cem\u003eResult\u003c/em\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_2070258526",
      "id": "20220811-123048_1786860552",
      "dateCreated": "2022-11-23 11:56:31.706",
      "dateStarted": "2022-12-06 09:57:04.105",
      "dateFinished": "2022-12-06 09:57:04.108",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# promoproduct\nunlinkedPromoProductDF \u003d unlinkedPromoProductDF.select(promoProductCols)\nnotCalcPlanPromoProductDF \u003d notCalcPlanPromoProductDF.select(promoProductCols)\n\nnewPromoProductDF \u003d calcPlanPromoProductDF.where(col(\u0027Id\u0027).isNull()).drop(\u0027#QCCount\u0027)\ncalcPlanPromoProductDF \u003d calcPlanPromoProductDF.where(~col(\u0027Id\u0027).isNull())\n\ncalcPlanPromoProductDF \u003d calcPlanPromoProductDF.union(unlinkedPromoProductDF)\nallCalcPlanPromoProductDF \u003d calcPlanPromoProductDF.union(notCalcPlanPromoProductDF)\n\nresultPromoProductDF \u003d allCalcPlanPromoProductDF.union(disabledPromoProductDF)\nresultPromoProductDF \u003d resultPromoProductDF.drop(\u0027#QCCount\u0027)\n# ---\n\n# promo\ncalcPlanPromoDF \u003d calcPlanPromoDF.select(promoCols)\nnotCalcPlanPromoDF \u003d notCalcPlanPromoDF.select(promoCols)\nallCalcPlanPromoDF \u003d calcPlanPromoDF.union(notCalcPlanPromoDF)\n\nresultPromoDF \u003d allCalcPlanPromoDF.union(disabledPromoDF)\nresultPromoDF \u003d resultPromoDF.drop(\u0027#QCCount\u0027)\n# ---\n\n# promosuportpromo\nresultPromoSupportPromoDF \u003d allPromoSupportPromoDF.union(disabledPromoSupportPromoDF)\n# ---\n\n# serviceInfo\nserviceInfoDF \u003d serviceInfoDF.drop(\u0027#QCCount\u0027)\n# ---",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:57:04.205",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_888456111",
      "id": "20220811-123048_668398721",
      "dateCreated": "2022-11-23 11:56:31.706",
      "dateStarted": "2022-12-06 09:57:04.208",
      "dateFinished": "2022-12-06 09:57:08.609",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# print(newPromoProductDF.count())\n# print(resultPromoProductDF.count())\n# print(resultPromoDF.count())\n# print(resultPromoSupportPromoDF.count())",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:57:08.612",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_2112728506",
      "id": "20220811-123048_1515073942",
      "dateCreated": "2022-11-23 11:56:31.706",
      "dateStarted": "2022-12-06 09:57:08.616",
      "dateFinished": "2022-12-06 09:57:08.832",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\ntry:\n   subprocess.call([\"hadoop\", \"fs\", \"-rm\", \"-r\",NEW_PROMOPRODUCT_PATH])\n   subprocess.call([\"hadoop\", \"fs\", \"-rm\", \"-r\",PLAN_PROMOPRODUCT_PARAMETERS_CALCULATION_RESULT_PATH])\n   subprocess.call([\"hadoop\", \"fs\", \"-rm\", \"-r\",PLAN_PROMO_PARAMETERS_CALCULATION_RESULT_PATH])\n   subprocess.call([\"hadoop\", \"fs\", \"-rm\", \"-r\",PLAN_PROMOSUPPORTPROMO_PARAMETERS_CALCULATION_RESULT_PATH])\n   subprocess.call([\"hadoop\", \"fs\", \"-rm\", \"-r\",SERVICEINFO_RESULT_PATH])\n   subprocess.call([\"hadoop\", \"fs\", \"-rm\", \"-r\",NEW_PRODUCTCHANGEINCIDENTS_PATH])\nexcept Exception as e:\n   print(e)",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:57:08.916",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_1050083056",
      "id": "20220811-123048_118693461",
      "dateCreated": "2022-11-23 11:56:31.706",
      "dateStarted": "2022-12-06 09:57:08.920",
      "dateFinished": "2022-12-06 09:57:17.907",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nprint(\u0027PLAN_PARAMETERS_CALCULATION_DONE\u0027)",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:57:17.927",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "PLAN_PARAMETERS_CALCULATION_DONE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_1340923088",
      "id": "paragraph_1660543326081_2118874479",
      "dateCreated": "2022-11-23 11:56:31.706",
      "dateStarted": "2022-12-06 09:57:17.931",
      "dateFinished": "2022-12-06 09:57:18.149",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# newPromoProductDF.coalesce(6).write.mode(\"overwrite\").parquet(NEW_PROMOPRODUCT_PATH)\nnewPromoProductDF\\\n.repartition(1)\\\n.write.csv(NEW_PROMOPRODUCT_PATH,\nsep\u003d\"\\u0001\",\nheader\u003dTrue,\nmode\u003d\"overwrite\",\nemptyValue\u003d\"\",\ntimestampFormat\u003d\"yyyy-MM-dd HH:mm:ss\"\n)\n\nresultPromoDF \u003d resultPromoDF.persist()\n\nresultPromoProductDF.coalesce(6).write.mode(\"overwrite\").parquet(PLAN_PROMOPRODUCT_PARAMETERS_CALCULATION_RESULT_PATH)\nresultPromoDF.write.mode(\"overwrite\").parquet(PLAN_PROMO_PARAMETERS_CALCULATION_RESULT_PATH)\nresultPromoSupportPromoDF.coalesce(6).write.mode(\"overwrite\").parquet(PLAN_PROMOSUPPORTPROMO_PARAMETERS_CALCULATION_RESULT_PATH)\n\n# serviceInfoDF.write.mode(\"overwrite\").parquet(SERVICEINFO_RESULT_PATH)\n\n# newProductChangeIncidentDF.write.mode(\"overwrite\").parquet(NEW_PRODUCTCHANGEINCIDENTS_PATH)\n\nserviceInfoDF\\\n.repartition(1)\\\n.write.csv(SERVICEINFO_RESULT_PATH,\nsep\u003d\"\\u0001\",\nheader\u003dTrue,\nmode\u003d\"overwrite\",\nemptyValue\u003d\"\",\ntimestampFormat\u003d\"yyyy-MM-dd HH:mm:ss\"\n)\n\nnewProductChangeIncidentDF\\\n.repartition(1)\\\n.write.csv(NEW_PRODUCTCHANGEINCIDENTS_PATH,\nsep\u003d\"\\u0001\",\nheader\u003dTrue,\nmode\u003d\"overwrite\",\nemptyValue\u003d\"\",\ntimestampFormat\u003d\"yyyy-MM-dd HH:mm:ss\"\n)\n",
      "user": "anonymous",
      "dateUpdated": "2022-12-06 09:57:30.245",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mPy4JJavaError\u001b[0m                             Traceback (most recent call last)\n\u001b[0;32m\u003cipython-input-164-95689c5bbafc\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# newPromoProductDF.coalesce(6).write.mode(\"overwrite\").parquet(NEW_PROMOPRODUCT_PATH)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 2\u001b[0;31m \u001b[0mnewPromoProductDF\u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mrepartition\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m .write.csv(NEW_PROMOPRODUCT_PATH,\n\u001b[1;32m      5\u001b[0m \u001b[0msep\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;34m\"\\u0001\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/usr/lib/spark/python/pyspark/sql/readwriter.py\u001b[0m in \u001b[0;36mcsv\u001b[0;34m(self, path, mode, compression, sep, quote, escape, header, nullValue, escapeQuotes, quoteAll, dateFormat, timestampFormat, ignoreLeadingWhiteSpace, ignoreTrailingWhiteSpace, charToEscapeQuoteEscaping, encoding, emptyValue, lineSep)\u001b[0m\n\u001b[1;32m   1028\u001b[0m                        \u001b[0mcharToEscapeQuoteEscaping\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0mcharToEscapeQuoteEscaping\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1029\u001b[0m                        encoding\u003dencoding, emptyValue\u003demptyValue, lineSep\u003dlineSep)\n\u001b[0;32m-\u003e 1030\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jwrite\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcsv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1031\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1032\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0msince\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/usr/lib/spark/python/lib/py4j-0.10.9-src.zip/py4j/java_gateway.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m   1302\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1303\u001b[0m         \u001b[0manswer\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgateway_client\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1304\u001b[0;31m         return_value \u003d get_return_value(\n\u001b[0m\u001b[1;32m   1305\u001b[0m             answer, self.gateway_client, self.target_id, self.name)\n\u001b[1;32m   1306\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/usr/lib/spark/python/pyspark/sql/utils.py\u001b[0m in \u001b[0;36mdeco\u001b[0;34m(*a, **kw)\u001b[0m\n\u001b[1;32m    126\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdeco\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 128\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    129\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mpy4j\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprotocol\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mPy4JJavaError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    130\u001b[0m             \u001b[0mconverted\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mconvert_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjava_exception\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/usr/lib/spark/python/lib/py4j-0.10.9-src.zip/py4j/protocol.py\u001b[0m in \u001b[0;36mget_return_value\u001b[0;34m(answer, gateway_client, target_id, name)\u001b[0m\n\u001b[1;32m    324\u001b[0m             \u001b[0mvalue\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mOUTPUT_CONVERTER\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0manswer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgateway_client\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    325\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0manswer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m\u003d\u003d\u001b[0m \u001b[0mREFERENCE_TYPE\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 326\u001b[0;31m                 raise Py4JJavaError(\n\u001b[0m\u001b[1;32m    327\u001b[0m                     \u001b[0;34m\"An error occurred while calling {0}{1}{2}.\\n\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    328\u001b[0m                     format(target_id, \".\", name), value)\n\n\u001b[0;31mPy4JJavaError\u001b[0m: An error occurred while calling o8049.csv.\n: org.apache.hadoop.security.AccessControlException: Permission denied: user\u003dzeppelin, access\u003dWRITE, inode\u003d\"/JUPITER/PROCESS/PromoProduct\":dataproc-agent:hadoop:drwxr-xr-x\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:399)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:255)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:193)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirectory.checkPermission(FSDirectory.java:1896)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirectory.checkPermission(FSDirectory.java:1880)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirectory.checkAncestorAccess(FSDirectory.java:1839)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirMkdirOp.mkdirs(FSDirMkdirOp.java:59)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirs(FSNamesystem.java:3252)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.mkdirs(NameNodeRpcServer.java:1158)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.mkdirs(ClientNamenodeProtocolServerSideTranslatorPB.java:723)\n\tat org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:422)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)\n\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:121)\n\tat org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:88)\n\tat org.apache.hadoop.hdfs.DFSClient.primitiveMkdir(DFSClient.java:2432)\n\tat org.apache.hadoop.hdfs.DFSClient.mkdirs(DFSClient.java:2406)\n\tat org.apache.hadoop.hdfs.DistributedFileSystem$27.doCall(DistributedFileSystem.java:1338)\n\tat org.apache.hadoop.hdfs.DistributedFileSystem$27.doCall(DistributedFileSystem.java:1335)\n\tat org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81)\n\tat org.apache.hadoop.hdfs.DistributedFileSystem.mkdirsInternal(DistributedFileSystem.java:1352)\n\tat org.apache.hadoop.hdfs.DistributedFileSystem.mkdirs(DistributedFileSystem.java:1327)\n\tat org.apache.hadoop.fs.FileSystem.mkdirs(FileSystem.java:2304)\n\tat org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.setupJob(FileOutputCommitter.java:355)\n\tat org.apache.spark.internal.io.HadoopMapReduceCommitProtocol.setupJob(HadoopMapReduceCommitProtocol.scala:163)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:173)\n\tat org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:178)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:108)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:106)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:131)\n\tat org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)\n\tat org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n\tat org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)\n\tat org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)\n\tat org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:127)\n\tat org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:126)\n\tat org.apache.spark.sql.DataFrameWriter.$anonfun$runCommand$1(DataFrameWriter.scala:962)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:100)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:160)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:87)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:767)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)\n\tat org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:962)\n\tat org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:414)\n\tat org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:398)\n\tat org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:287)\n\tat org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:952)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\n\tat java.lang.Thread.run(Thread.java:750)\nCaused by: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.security.AccessControlException): Permission denied: user\u003dzeppelin, access\u003dWRITE, inode\u003d\"/JUPITER/PROCESS/PromoProduct\":dataproc-agent:hadoop:drwxr-xr-x\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:399)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:255)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:193)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirectory.checkPermission(FSDirectory.java:1896)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirectory.checkPermission(FSDirectory.java:1880)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirectory.checkAncestorAccess(FSDirectory.java:1839)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirMkdirOp.mkdirs(FSDirMkdirOp.java:59)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirs(FSNamesystem.java:3252)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.mkdirs(NameNodeRpcServer.java:1158)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.mkdirs(ClientNamenodeProtocolServerSideTranslatorPB.java:723)\n\tat org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:422)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)\n\n\tat org.apache.hadoop.ipc.Client.getRpcResponse(Client.java:1562)\n\tat org.apache.hadoop.ipc.Client.call(Client.java:1508)\n\tat org.apache.hadoop.ipc.Client.call(Client.java:1405)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)\n\tat com.sun.proxy.$Proxy17.mkdirs(Unknown Source)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.mkdirs(ClientNamenodeProtocolTranslatorPB.java:663)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)\n\tat com.sun.proxy.$Proxy18.mkdirs(Unknown Source)\n\tat org.apache.hadoop.hdfs.DFSClient.primitiveMkdir(DFSClient.java:2430)\n\t... 43 more\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_1025908251",
      "id": "20220811-123048_1741831083",
      "dateCreated": "2022-11-23 11:56:31.706",
      "dateStarted": "2022-12-06 09:57:30.249",
      "dateFinished": "2022-12-06 09:57:32.263",
      "status": "ERROR"
    },
    {
      "text": "%md\n####*Logging*",
      "user": "anonymous",
      "dateUpdated": "2022-11-23 11:56:31.706",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e####\u003cem\u003eLogging\u003c/em\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_1746723711",
      "id": "20220811-123048_1999681836",
      "dateCreated": "2022-11-23 11:56:31.706",
      "status": "READY"
    },
    {
      "text": "%pyspark\n\nlogPromoProductDF \u003d logPromoProductDF\\\n  .join(logCOGS, \u0027promoNumber\u0027, \u0027full\u0027)\n\nlogPromoProductDF \u003d logPromoProductDF\\\n  .join(logTI, \u0027promoNumber\u0027, \u0027full\u0027)\n\ntitleMessage \u003d \u0027[INFO]: PLAN PARAMETERS CALCULATION\u0027\ntitleLogMessageDF \u003d spark.createDataFrame([(titleMessage,)], inputLogMessageSchema)\n\nlogMessageDF \u003d logPromoProductDF\\\n  .select(concat(lit(\u0027[WARNING]: Promo №:\u0027), col(\u0027promoNumber\u0027),\\\n                 when(col(\u0027nullPriceMessage\u0027).isNull(), \u0027\u0027).otherwise(concat(lit(\u0027 There\\\u0027re no price for ZREP: \u0027), col(\u0027nullPriceMessage\u0027))),\\\n                 when(col(\u0027zeroPriceMessage\u0027).isNull(), \u0027\u0027).otherwise(concat(lit(\u0027.\\r\\n There\\\u0027re zero price for ZREP: \u0027), col(\u0027zeroPriceMessage\u0027))),\\\n                 when(col(\u0027nullShareMessage\u0027).isNull(), \u0027\u0027).otherwise(concat(lit(\u0027.\\r\\n There\\\u0027re no share for ZREP: \u0027), col(\u0027nullShareMessage\u0027))),\\\n                 when(col(\u0027zeroShareMessage\u0027).isNull(), \u0027\u0027).otherwise(concat(lit(\u0027.\\r\\n There\\\u0027re zero share for ZREP: \u0027), col(\u0027zeroShareMessage\u0027))),\\\n                 when(col(\u0027zeroBaselineQtyMessage\u0027).isNull(), \u0027\u0027).otherwise(concat(lit(\u0027.\\r\\n There\\\u0027re zero PlanBaselineCaseQty for ZREP: \u0027), col(\u0027zeroBaselineQtyMessage\u0027))),\\\n                 when(col(\u0027COGSMessage\u0027).isNull(), \u0027\u0027).otherwise(concat(lit(\u0027.\\r\\n \u0027), col(\u0027COGSMessage\u0027))),\\\n                 when(col(\u0027TIMessage\u0027).isNull(), \u0027\u0027).otherwise(concat(lit(\u0027.\\r\\n \u0027), col(\u0027TIMessage\u0027))),\\\n                 (lit(\u0027.\\r\\n\u0027))\n                ).alias(\u0027logMessage\u0027))\\\n  .where((col(\u0027logMessage\u0027) !\u003d \"\") \u0026 ~(col(\u0027logMessage\u0027).isNull()))\n\noutputLogMessageDF \u003d inputLogMessageDF\\\n  .union(titleLogMessageDF)\\\n  .union(logMessageDF)\n\n  \n  ",
      "user": "anonymous",
      "dateUpdated": "2022-11-23 11:56:31.706",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_760173125",
      "id": "20220811-123048_1549395165",
      "dateCreated": "2022-11-23 11:56:31.706",
      "status": "READY"
    },
    {
      "text": "%pyspark\nsc.setCheckpointDir(\"tmp\")\n\noutputLogMessageDF\\\n.checkpoint(eager\u003dTrue)\\\n.repartition(1)\\\n.write.csv(INPUT_FILE_LOG_PATH,\nsep\u003d\"\\u0001\",\nheader\u003dTrue,\nmode\u003d\"overwrite\",\nemptyValue\u003d\"\",\n)\n\n# subprocess.call([\"hadoop\", \"fs\", \"-mv\", OUTPUT_TEMP_FILE_LOG_PATH, OUTPUT_LOG_PATH])\n# subprocess.call([\"hadoop\", \"fs\", \"-rm\", \"-r\", OUTPUT_TEMP_FILE_LOG_PATH])",
      "user": "anonymous",
      "dateUpdated": "2022-11-23 11:56:31.706",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mPy4JJavaError\u001b[0m                             Traceback (most recent call last)\n\u001b[0;32m\u003cipython-input-152-2b265e7e16a6\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0msc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msetCheckpointDir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"tmp\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 3\u001b[0;31m \u001b[0moutputLogMessageDF\u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mcheckpoint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0meager\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mrepartition\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/usr/lib/spark/python/pyspark/sql/readwriter.py\u001b[0m in \u001b[0;36mcsv\u001b[0;34m(self, path, mode, compression, sep, quote, escape, header, nullValue, escapeQuotes, quoteAll, dateFormat, timestampFormat, ignoreLeadingWhiteSpace, ignoreTrailingWhiteSpace, charToEscapeQuoteEscaping, encoding, emptyValue, lineSep)\u001b[0m\n\u001b[1;32m   1028\u001b[0m                        \u001b[0mcharToEscapeQuoteEscaping\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0mcharToEscapeQuoteEscaping\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1029\u001b[0m                        encoding\u003dencoding, emptyValue\u003demptyValue, lineSep\u003dlineSep)\n\u001b[0;32m-\u003e 1030\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jwrite\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcsv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1031\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1032\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0msince\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/usr/lib/spark/python/lib/py4j-0.10.9-src.zip/py4j/java_gateway.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m   1302\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1303\u001b[0m         \u001b[0manswer\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgateway_client\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1304\u001b[0;31m         return_value \u003d get_return_value(\n\u001b[0m\u001b[1;32m   1305\u001b[0m             answer, self.gateway_client, self.target_id, self.name)\n\u001b[1;32m   1306\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/usr/lib/spark/python/pyspark/sql/utils.py\u001b[0m in \u001b[0;36mdeco\u001b[0;34m(*a, **kw)\u001b[0m\n\u001b[1;32m    126\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdeco\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 128\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    129\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mpy4j\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprotocol\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mPy4JJavaError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    130\u001b[0m             \u001b[0mconverted\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mconvert_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjava_exception\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/usr/lib/spark/python/lib/py4j-0.10.9-src.zip/py4j/protocol.py\u001b[0m in \u001b[0;36mget_return_value\u001b[0;34m(answer, gateway_client, target_id, name)\u001b[0m\n\u001b[1;32m    324\u001b[0m             \u001b[0mvalue\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mOUTPUT_CONVERTER\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0manswer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgateway_client\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    325\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0manswer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m\u003d\u003d\u001b[0m \u001b[0mREFERENCE_TYPE\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 326\u001b[0;31m                 raise Py4JJavaError(\n\u001b[0m\u001b[1;32m    327\u001b[0m                     \u001b[0;34m\"An error occurred while calling {0}{1}{2}.\\n\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    328\u001b[0m                     format(target_id, \".\", name), value)\n\n\u001b[0;31mPy4JJavaError\u001b[0m: An error occurred while calling o9763.csv.\n: org.apache.hadoop.security.AccessControlException: Permission denied: user\u003dzeppelin, access\u003dALL, inode\u003d\"/JUPITER/PROCESS/Logs/7ac7ab63-c489-4a51-a90a-6ae1beabf723.csv\":dataproc-agent:hadoop:drwxr-xr-x\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkSubAccess(FSPermissionChecker.java:348)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:265)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:193)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirectory.checkPermission(FSDirectory.java:1896)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirDeleteOp.delete(FSDirDeleteOp.java:110)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.delete(FSNamesystem.java:3104)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.delete(NameNodeRpcServer.java:1127)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.delete(ClientNamenodeProtocolServerSideTranslatorPB.java:708)\n\tat org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:422)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)\n\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:121)\n\tat org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:88)\n\tat org.apache.hadoop.hdfs.DFSClient.delete(DFSClient.java:1614)\n\tat org.apache.hadoop.hdfs.DistributedFileSystem$19.doCall(DistributedFileSystem.java:949)\n\tat org.apache.hadoop.hdfs.DistributedFileSystem$19.doCall(DistributedFileSystem.java:946)\n\tat org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81)\n\tat org.apache.hadoop.hdfs.DistributedFileSystem.delete(DistributedFileSystem.java:956)\n\tat org.apache.spark.internal.io.FileCommitProtocol.deleteWithJob(FileCommitProtocol.scala:124)\n\tat org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.deleteMatchingPartitions(InsertIntoHadoopFsRelationCommand.scala:226)\n\tat org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:129)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:108)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:106)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:131)\n\tat org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)\n\tat org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n\tat org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)\n\tat org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)\n\tat org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:127)\n\tat org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:126)\n\tat org.apache.spark.sql.DataFrameWriter.$anonfun$runCommand$1(DataFrameWriter.scala:962)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:100)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:160)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:87)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:764)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)\n\tat org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:962)\n\tat org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:414)\n\tat org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:398)\n\tat org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:287)\n\tat org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:952)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.security.AccessControlException): Permission denied: user\u003dzeppelin, access\u003dALL, inode\u003d\"/JUPITER/PROCESS/Logs/7ac7ab63-c489-4a51-a90a-6ae1beabf723.csv\":dataproc-agent:hadoop:drwxr-xr-x\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkSubAccess(FSPermissionChecker.java:348)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:265)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:193)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirectory.checkPermission(FSDirectory.java:1896)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirDeleteOp.delete(FSDirDeleteOp.java:110)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.delete(FSNamesystem.java:3104)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.delete(NameNodeRpcServer.java:1127)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.delete(ClientNamenodeProtocolServerSideTranslatorPB.java:708)\n\tat org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:422)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)\n\n\tat org.apache.hadoop.ipc.Client.getRpcResponse(Client.java:1562)\n\tat org.apache.hadoop.ipc.Client.call(Client.java:1508)\n\tat org.apache.hadoop.ipc.Client.call(Client.java:1405)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)\n\tat com.sun.proxy.$Proxy17.delete(Unknown Source)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.delete(ClientNamenodeProtocolTranslatorPB.java:644)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)\n\tat com.sun.proxy.$Proxy18.delete(Unknown Source)\n\tat org.apache.hadoop.hdfs.DFSClient.delete(DFSClient.java:1612)\n\t... 39 more\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_813186998",
      "id": "20220811-123048_1135065269",
      "dateCreated": "2022-11-23 11:56:31.706",
      "status": "READY"
    },
    {
      "text": "%pyspark\nprint(f\u0027PLAN_PARAMETERS_CALCULATION_ALL_WRITES_DONE\u0027)",
      "user": "anonymous",
      "dateUpdated": "2022-11-23 11:56:31.706",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "PLAN_PARAMETERS_CALCULATION_ALL_WRITES_DONE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_547568490",
      "id": "paragraph_1660545582205_1333866569",
      "dateCreated": "2022-11-23 11:56:31.706",
      "status": "READY"
    },
    {
      "text": "%pyspark\n# promoProductDF.orderBy(\u0027Id\u0027).toPandas().to_csv(OUTPUT_SOURCE_PROMOPRODUCT_PATH, encoding\u003d\u0027utf-8\u0027,index\u003dFalse,sep \u003d \u0027\\u0001\u0027)\n# resultPromoProductDF.orderBy(\u0027Id\u0027).toPandas().to_csv(OUTPUT_PROMOPRODUCT_PATH, encoding\u003d\u0027utf-8\u0027,index\u003dFalse,sep \u003d \u0027\\u0001\u0027)",
      "user": "anonymous",
      "dateUpdated": "2022-11-23 11:56:31.706",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_512324297",
      "id": "20220811-123048_895409161",
      "dateCreated": "2022-11-23 11:56:31.706",
      "status": "READY"
    },
    {
      "text": "%pyspark\n# promoDF.orderBy(\u0027Id\u0027).toPandas().to_csv(OUTPUT_SOURCE_PROMO_PATH, encoding\u003d\u0027utf-8\u0027,index\u003dFalse,sep \u003d \u0027\\u0001\u0027)\n# resultPromoDF.orderBy(\u0027Id\u0027).toPandas().to_csv(OUTPUT_PROMO_PATH, encoding\u003d\u0027utf-8\u0027,index\u003dFalse,sep \u003d \u0027\\u0001\u0027)",
      "user": "anonymous",
      "dateUpdated": "2022-11-23 11:56:31.706",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_1550495073",
      "id": "20220811-123048_1205201495",
      "dateCreated": "2022-11-23 11:56:31.706",
      "status": "READY"
    },
    {
      "text": "%pyspark\n# promoSupportPromoDF.orderBy(\u0027Id\u0027).toPandas().to_csv(OUTPUT_SOURCE_PROMOSUPPORTPROMO_PATH, encoding\u003d\u0027utf-8\u0027,index\u003dFalse,sep \u003d \u0027\\u0001\u0027)\n# resultPromoSupportPromoDF.orderBy(\u0027Id\u0027).toPandas().to_csv(OUTPUT_PROMOSUPPORTPROMO_PATH, encoding\u003d\u0027utf-8\u0027,index\u003dFalse,sep \u003d \u0027\\u0001\u0027)",
      "user": "anonymous",
      "dateUpdated": "2022-11-23 11:56:31.706",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1669204591706_1942629098",
      "id": "20220811-123048_1413054844",
      "dateCreated": "2022-11-23 11:56:31.706",
      "status": "READY"
    }
  ],
  "name": "PLAN_PARAMETERS_CALCULATION",
  "id": "2HK3QKV2X",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {
    "isRunning": false
  }
}