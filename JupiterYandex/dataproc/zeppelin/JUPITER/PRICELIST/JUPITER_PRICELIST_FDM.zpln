{
  "paragraphs": [
    {
      "text": "%md\n### Calculate pricelist with ghierarchy's client id mapped to\n### Developer: LLC Smart-Com, alexei.loktev@effem.com\n### Last Updated - 06th Jun 2020 - alexei.loktev@effem.com",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:16+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Calculate pricelist with ghierarchy&rsquo;s client id mapped to</h3>\n<h3>Developer: LLC Smart-Com, <a href=\"mailto:alexei.loktev@effem.com\">alexei.loktev@effem.com</a></h3>\n<h3>Last Updated - 06th Jun 2020 - <a href=\"mailto:alexei.loktev@effem.com\">alexei.loktev@effem.com</a></h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_2012056346",
      "id": "20220826-112951_171069076",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:16+0000",
      "dateFinished": "2023-02-02T11:07:17+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:8998"
    },
    {
      "title": "Function to determine runtime(Notebook or pure python)",
      "text": "%pyspark\ndef is_notebook() -> bool:\n    try:\n        shell = get_ipython().__class__.__name__\n        if shell == 'ZMQInteractiveShell':\n            return True   # Jupyter notebook or qtconsole\n        elif shell == 'TerminalInteractiveShell':\n            return False  # Terminal running IPython\n        else:\n            return False  # Other type (?)\n    except NameError:\n        return False      # Probably standard Python interpreter\n",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:17+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1811116809",
      "id": "20220826-112951_287106001",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:17+0000",
      "dateFinished": "2023-02-02T11:07:43+0000",
      "status": "FINISHED",
      "$$hashKey": "object:8999"
    },
    {
      "text": "%pyspark\nfrom pyspark.sql import SQLContext, DataFrame, Row, Window\nfrom pyspark.sql import SparkSession\nfrom pyspark.context import SparkContext\nfrom pyspark.sql.types import *\nfrom pyspark.sql.functions import *\nfrom pyspark.sql.window import Window\nimport datetime as datetime\nimport pandas as pd\nfrom dateutil.relativedelta import relativedelta\nimport math\nimport subprocess",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:43+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_764131641",
      "id": "20220826-112951_1948591749",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:43+0000",
      "dateFinished": "2023-02-02T11:07:43+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9000"
    },
    {
      "text": "%pyspark\nif is_notebook():\n sys.argv=['','{\"MaintenancePathPrefix\": '\n '\"/JUPITER/OUTPUT/#MAINTENANCE/2023-01-31_scheduled__2023-01-31T17%3A00%3A00%2B00%3A00_\", '\n '\"ProcessDate\": \"2023-01-31\", \"Schema\": \"Jupiter\", \"PipelineName\": '\n '\"jupiter_pricelist_fdm\"}']\n \n sc.addPyFile(\"hdfs:///SRC/SHARED/EXTRACT_SETTING.py\")\n os.environ[\"HADOOP_USER_NAME\"] = \"airflow\"",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:43+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1770853846",
      "id": "paragraph_1661514533441_511220441",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:43+0000",
      "dateFinished": "2023-02-02T11:07:44+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9001"
    },
    {
      "text": "%pyspark\nspark = SparkSession.builder.appName('Jupiter - PySpark').getOrCreate()\nimport EXTRACT_SETTING as es\n\nSETTING_RAW_DIR = es.SETTING_RAW_DIR\nSETTING_PROCESS_DIR = es.SETTING_PROCESS_DIR\nSETTING_OUTPUT_DIR = es.SETTING_OUTPUT_DIR\n\nDATE_DIR=es.DATE_DIR\n\nEXTRACT_ENTITIES_AUTO_PATH = f'{es.HDFS_PREFIX}{es.MAINTENANCE_PATH_PREFIX}EXTRACT_ENTITIES_AUTO.csv'\nprocessDate=es.processDate\npipelineRunId=es.pipelineRunId\npipelineSubfolderName = es.input_params.get(\"PipelineName\")\n\nprint(f'EXTRACT_ENTITIES_AUTO_PATH={EXTRACT_ENTITIES_AUTO_PATH}')",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "INPUT_PARAMS={\"MaintenancePathPrefix\": \"/JUPITER/OUTPUT/#MAINTENANCE/2023-01-31_scheduled__2023-01-31T17%3A00%3A00%2B00%3A00_\", \"ProcessDate\": \"2023-01-31\", \"Schema\": \"Jupiter\", \"PipelineName\": \"jupiter_pricelist_fdm\"}\nSETTINGS_PATH=hdfs:///JUPITER/OUTPUT/#MAINTENANCE/2023-01-31_scheduled__2023-01-31T17%3A00%3A00%2B00%3A00_PARAMETERS.csv\nhdfs:///JUPITER/OUTPUT/#MAINTENANCE/2023-01-31_scheduled__2023-01-31T17%3A00%3A00%2B00%3A00_PARAMETERS.csv\n\nprocessDate: 2023-01-31\npipelineRunId: scheduled__2023-01-31T17%3A00%3A00%2B00%3A00\npipelineSubfolderName: jupiter_pricelist_fdm\n\nSETTING_RAW_DIR: hdfs:///JUPITER/RAW\nSETTING_PROCESS_DIR: hdfs:///JUPITER/PROCESS\nSETTING_OUTPUT_DIR: hdfs:///JUPITER/OUTPUT\nMAINTENANCE_PATH_PREFIX: /JUPITER/OUTPUT/#MAINTENANCE/2023-01-31_scheduled__2023-01-31T17%3A00%3A00%2B00%3A00_\nSYSTEM_NAME: JUPITER\nSETTING_BRANCH_NAME: \nOther settings - list \"systemParametersDF\" data frame\nEXTRACT_ENTITIES_AUTO_PATH=hdfs:///JUPITER/OUTPUT/#MAINTENANCE/2023-01-31_scheduled__2023-01-31T17%3A00%3A00%2B00%3A00_EXTRACT_ENTITIES_AUTO.csv\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=0",
              "$$hashKey": "object:10266"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=1",
              "$$hashKey": "object:10267"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=2",
              "$$hashKey": "object:10268"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=3",
              "$$hashKey": "object:10269"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=4",
              "$$hashKey": "object:10270"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=5",
              "$$hashKey": "object:10271"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=6",
              "$$hashKey": "object:10272"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1648729992",
      "id": "20220826-112951_293495567",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:44+0000",
      "dateFinished": "2023-02-02T11:07:52+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9002"
    },
    {
      "text": "%pyspark\n# Get current date\ntoday = datetime.datetime.today()\nprint(today)\n",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:52+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "2023-02-02 11:07:52.744949\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1087615130",
      "id": "20220826-112951_1682079307",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:52+0000",
      "dateFinished": "2023-02-02T11:07:52+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9003"
    },
    {
      "text": "%pyspark\n# Inputs\nCUST_SALES_ATTR_DIR=SETTING_RAW_DIR+'/SOURCES/HYDRATEATLAS/0CUST_SALES_ATTR.PARQUET'\nCUSTOMER_HIER_DIR=SETTING_RAW_DIR+'/SOURCES/UNIVERSALCATALOG/MARS_UNIVERSAL_PETCARE_CUSTOMERS.csv'\nPRICELIST_DIR=SETTING_RAW_DIR+'/SOURCES/UNIVERSALCATALOG/MARS_UNIVERSAL_PETCARE_PRICELIST_GENERAL.csv'\n\n# Outputs\nOUTPUT_DIR=SETTING_OUTPUT_DIR+\"/\"+pipelineSubfolderName\nPRICELIST_FDM_OUTPUT_DIR=OUTPUT_DIR+\"/PRICELIST_FDM.CSV\"\nPRICELIST_FDM_ARCHIVE_OUTPUT_DIR=OUTPUT_DIR+\"/#ARCHIVE/PRICELIST_FDM.CSV\"\n",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:52+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1298832719",
      "id": "20220826-112951_313920377",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:52+0000",
      "dateFinished": "2023-02-02T11:07:53+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9004"
    },
    {
      "text": "%pyspark\npricelistSchema=StructType([StructField('SOLD_TO' , StringType(), False),\n                              StructField('MATERIAL' , StringType(), False),\n                              StructField('ZREP' , StringType(), False),\n                              StructField('PRICE_CS' , DoubleType(), False),\n                              StructField('PRICE_ST' , DoubleType(), False),\n                              StructField('PRICE_KG' , DoubleType(), False),\n                              StructField('START_DATE' , DateType(), False),\n                              StructField('END_DATE' , DateType(), False),\n                              StructField('CURRENCY' , StringType(), False), \n                              StructField('PRICELIST' , StringType(), False), \n                              StructField('DELETION_INDICATOR' , StringType(), False),\n                              StructField('RELEASE_STATUS' , StringType(), False), \n                              StructField('CREATED_ON' , DateType(), False)])",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:53+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1344957244",
      "id": "20220826-112951_1341789860",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:53+0000",
      "dateFinished": "2023-02-02T11:07:53+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9005"
    },
    {
      "text": "%pyspark\ncustomerSalesAttributesDf=spark.read.parquet(CUST_SALES_ATTR_DIR)\n\ngHierarchyDf = spark.read.format(\"csv\").option(\"header\", \"true\").option(\"delimiter\", \"\\u0001\").load(CUSTOMER_HIER_DIR)\n\npricelistDf=spark.read.format(\"csv\").schema(pricelistSchema).option(\"header\", \"true\").load(PRICELIST_DIR)\n",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:53+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=7",
              "$$hashKey": "object:10480"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=8",
              "$$hashKey": "object:10481"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_361671098",
      "id": "20220826-112951_771646031",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:53+0000",
      "dateFinished": "2023-02-02T11:07:54+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9006"
    },
    {
      "text": "%pyspark\npricelistDf=pricelistDf\\\n            .where((col(\"DELETION_INDICATOR\").isNull()) & (col(\"PRICE_CS\").isNotNull())& (col(\"PRICE_ST\").isNotNull())& (col(\"PRICE_KG\").isNotNull()))\nprint(\"Price list rows:\",pricelistDf.count())\n\nprint(\"GH Full rows:\",gHierarchyDf.count())\n\n# Choose only active data from GHierarchy\ngHierarchyActiveDf=gHierarchyDf\\\n.withColumn(\"Active_From\",to_date(col('Active_From'), 'yyyy/MM/dd'))\\\n.withColumn(\"Active_Till\",to_date(col('Active_Till'), 'yyyy/MM/dd'))\\\n.where(((col(\"Active_From\") <= today )&(col(\"Active_Till\") >=today)) | ((col(\"Active_From\") <= today )&(col(\"Active_Till\").isNull())) )\n\nprint(\"GH active rows:\",gHierarchyActiveDf.count())\n\ngHierarchyActiveDf=gHierarchyActiveDf\\\n.withColumn('SoldToPoint',regexp_replace('SoldToPoint','^0*',''))\\\n.withColumn('0CUST_SALES',regexp_replace('0CUST_SALES','^0*',''))\n\ncustomerSalesSubsetDf=customerSalesAttributesDf.select(\"KUNNR_PK\",\"VKORG_PK\",\"VTWEG_PK\",\"SPART_PK\",\"PLTYP\",\"KTGRD\",\"ERDAT\",\"LOEVM\",\"ODQ_CHANGEMODE\").withColumn('KUNNR_PK',regexp_replace('KUNNR_PK','^0*',''))\ncustomerSalesSubsetDf=customerSalesSubsetDf.where((col(\"VKORG_PK\")==261)&(col(\"SPART_PK\")==51) & (col(\"VTWEG_PK\").isin(11,22,33))& (col(\"LOEVM\").isNull()) & (col(\"PLTYP\").isNotNull())).select(col(\"KUNNR_PK\"),col(\"VTWEG_PK\").alias(\"DISTR_CH\"),col(\"PLTYP\"),col(\"ERDAT\"),col(\"ODQ_CHANGEMODE\"))\nprint(\"0CUST_SALES_ATTR rows:\",customerSalesSubsetDf.count())",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:54+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Price list rows: 207140\nGH Full rows: 1100\nGH active rows: 1044\n0CUST_SALES_ATTR rows: 847\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=9",
              "$$hashKey": "object:10543"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=10",
              "$$hashKey": "object:10544"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=11",
              "$$hashKey": "object:10545"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=12",
              "$$hashKey": "object:10546"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1806924001",
      "id": "20220826-112951_1522135453",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:54+0000",
      "dateFinished": "2023-02-02T11:07:57+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9007"
    },
    {
      "text": "%pyspark\n# 10104987\n# display(pricelistDf.where(col(\"ZREP\")==\"10104987\"))",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:57+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1441715515",
      "id": "20220826-112951_2029438064",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:57+0000",
      "dateFinished": "2023-02-02T11:07:58+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9008"
    },
    {
      "text": "%pyspark\n# display(pricelistDf.where(col(\"PRICE_CS\").isNull()))",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:58+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_215319915",
      "id": "20220826-112951_1730589436",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:58+0000",
      "dateFinished": "2023-02-02T11:07:58+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9009"
    },
    {
      "text": "%pyspark\nghHierarchySoldToDf=gHierarchyActiveDf.select(col(\"SoldToPoint\"),col(\"0DISTR_CHAN\"),col(\"ZCUSTHG04\").alias(\"GHierarchyId\"),col(\"ZCUSTHG04___T\").alias(\"GHierarchyName\"))\n\nghHierarchySoldToDf=ghHierarchySoldToDf.withColumn('GHierarchyId',regexp_replace('GHierarchyId','^0*',''))\n\nprint(\"Soldto count:\",ghHierarchySoldToDf.count())\n\n\ngHierPricelistTypeDf=customerSalesSubsetDf.join(ghHierarchySoldToDf,(customerSalesSubsetDf[\"KUNNR_PK\"]==ghHierarchySoldToDf[\"SoldToPoint\"]) & (customerSalesSubsetDf[\"DISTR_CH\"]==ghHierarchySoldToDf[\"0DISTR_CHAN\"]),how=\"inner\").dropDuplicates()\nprint(\"Soldto count:\",gHierPricelistTypeDf.count())\n\ngHierPricelistTypeDf=gHierPricelistTypeDf.select(\"DISTR_CH\",\"PLTYP\",\"ERDAT\",\"ODQ_CHANGEMODE\",\"GHierarchyId\",\"GHierarchyName\").dropDuplicates()\nprint(\"Soldto count:\",gHierPricelistTypeDf.count())",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:07:58+0000",
      "progress": 65,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Soldto count: 1044\nSoldto count: 195\nSoldto count: 162\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=13",
              "$$hashKey": "object:10700"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=15",
              "$$hashKey": "object:10701"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=17",
              "$$hashKey": "object:10702"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1512029555",
      "id": "20220826-112951_957634637",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:07:58+0000",
      "dateFinished": "2023-02-02T11:08:04+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9010"
    },
    {
      "text": "%pyspark\nwindow = Window.\\\n              partitionBy(\"DISTR_CH\",\"PLTYP\",\"ODQ_CHANGEMODE\",\"GHierarchyId\",\"GHierarchyName\").\\\n              orderBy(gHierPricelistTypeDf[\"ERDAT\"].desc())\ncustPartDf = gHierPricelistTypeDf\\\n            .where(col(\"PLTYP\").isNotNull())\\\n            .withColumn(\"MAX_ERDAT\",max(\"ERDAT\").over(window))\\\n\ncustSubsetDf=custPartDf.where(col(\"ERDAT\")==col(\"MAX_ERDAT\")).drop(\"MAX_ERDAT\")\ncustSubsetDf.dropDuplicates().count()\n",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:04+0000",
      "progress": 82,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "86"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=19",
              "$$hashKey": "object:10768"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1996788720",
      "id": "20220826-112951_741635051",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:04+0000",
      "dateFinished": "2023-02-02T11:08:08+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9011"
    },
    {
      "text": "%pyspark\n# display(custSubsetDf.orderBy(\"GHierarchyName\"))",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:08+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_9007327",
      "id": "20220826-112951_1647306585",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:08+0000",
      "dateFinished": "2023-02-02T11:08:08+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9012"
    },
    {
      "text": "%pyspark\ncustSubsetDf=custSubsetDf.fillna({\"ODQ_CHANGEMODE\":\"I\"})\n\nwindow = Window.\\\n              partitionBy(\"GHierarchyId\",\"GHierarchyName\",\"DISTR_CH\",\"ERDAT\").\\\n              orderBy(custSubsetDf[\"ODQ_CHANGEMODE\"].desc())\ncustPart2Df = custSubsetDf.withColumn(\"GROUP_ODQ_CHANGEMODE\",first(\"ODQ_CHANGEMODE\",True).over(window))\nclientToPricelistMapDf=custPart2Df.where(col(\"ODQ_CHANGEMODE\")==col(\"GROUP_ODQ_CHANGEMODE\")).drop(\"GROUP_ODQ_CHANGEMODE\")\nclientToPricelistMapDf=clientToPricelistMapDf.select(\"GHierarchyId\",\"GHierarchyName\",\"PLTYP\").dropDuplicates([\"GHierarchyId\",\"GHierarchyName\"])\n\nclientToPricelistMapDf.persist()\nclientToPricelistMapDf.count()",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:08+0000",
      "progress": 94,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "41"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=21",
              "$$hashKey": "object:10868"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1203643795",
      "id": "20220826-112951_810293426",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:08+0000",
      "dateFinished": "2023-02-02T11:08:12+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9013"
    },
    {
      "text": "%pyspark\n# display(clientToPricelistMapDf.orderBy(\"GHierarchyName\"))",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:12+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1156300614",
      "id": "20220826-112951_721549510",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:12+0000",
      "dateFinished": "2023-02-02T11:08:12+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9014"
    },
    {
      "text": "%pyspark\ndupsDf=clientToPricelistMapDf\\\n.groupBy(\"GHierarchyId\",\"GHierarchyName\",\"PLTYP\")\\\n.agg((count(\"*\")>1).cast(\"int\").alias(\"DUPLICATE\"))\\\n.where(col(\"DUPLICATE\")>0)\n\ndupsDf.count()",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:12+0000",
      "progress": 5,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "0"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=22",
              "$$hashKey": "object:10968"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1606774839",
      "id": "20220826-112951_606432614",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:12+0000",
      "dateFinished": "2023-02-02T11:08:14+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9015"
    },
    {
      "text": "%pyspark\npriceLevelPricesDf=pricelistDf.where(col(\"SOLD_TO\").isNull())\npriceLevelPricesDf.count()",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:14+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "164585"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=23",
              "$$hashKey": "object:11026"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_459461143",
      "id": "20220826-112951_967660436",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:14+0000",
      "dateFinished": "2023-02-02T11:08:14+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9016"
    },
    {
      "text": "%pyspark\npricelistClientsDf=priceLevelPricesDf.join(clientToPricelistMapDf,priceLevelPricesDf[\"PRICELIST\"]==clientToPricelistMapDf[\"PLTYP\"],how=\"left\")\npricelistClientsDf.count()",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:15+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "559038"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=25",
              "$$hashKey": "object:11084"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_2128085750",
      "id": "20220826-112951_1769227675",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:15+0000",
      "dateFinished": "2023-02-02T11:08:16+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9017"
    },
    {
      "text": "%pyspark\nprint(\"clients price type codes:\",clientToPricelistMapDf.select(\"PLTYP\").distinct().count())\nprint(\"pricelist price type codes:\",pricelistDf.select(\"PRICELIST\").distinct().count())\nprint(\"Not mapped price level prices:\",pricelistClientsDf.where(col(\"GHierarchyId\").isNull()).count())",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:16+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "clients price type codes: 11\npricelist price type codes: 24\nNot mapped price level prices: 53710\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=26",
              "$$hashKey": "object:11142"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=27",
              "$$hashKey": "object:11143"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=29",
              "$$hashKey": "object:11144"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_2031195581",
      "id": "20220826-112951_1293375419",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:16+0000",
      "dateFinished": "2023-02-02T11:08:18+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9018"
    },
    {
      "text": "%pyspark\n# display(pricelistClientsDf.where((col(\"GHierarchyId\").isNull()) ).select(\"PRICELIST\").distinct())",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:18+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_337147463",
      "id": "20220826-112951_1112952098",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:18+0000",
      "dateFinished": "2023-02-02T11:08:18+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9019"
    },
    {
      "text": "%pyspark\nsoldtoLevelPricesDf=pricelistDf.where(col(\"SOLD_TO\").isNotNull())\nsoldtoLevelPricesDf.count()",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:18+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "42555"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=30",
              "$$hashKey": "object:11252"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_132673800",
      "id": "20220826-112951_297043727",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:18+0000",
      "dateFinished": "2023-02-02T11:08:19+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9020"
    },
    {
      "text": "%pyspark\nghHierarchySoldToSubsetDf=ghHierarchySoldToDf.withColumn('SoldToPoint',regexp_replace('SoldToPoint','^0*',''))\n\nghHierarchySoldToSubsetDf=ghHierarchySoldToSubsetDf\\\n.dropDuplicates()\\\n.where((col(\"SoldToPoint\").isNotNull()) & ~(col(\"ZCUSTHG04\")==\"0\"))\\\n.withColumn('GHierarchyId',regexp_replace('GHierarchyId','^0*',''))\n\nprint(ghHierarchySoldToSubsetDf.count())\n\npricelistSoldtoClientsDf=soldtoLevelPricesDf.join(ghHierarchySoldToSubsetDf,soldtoLevelPricesDf[\"SOLD_TO\"]==ghHierarchySoldToSubsetDf[\"SoldToPoint\"],how=\"left\")\npricelistSoldtoClientsDf.count()",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:19+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "195\n44300"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=31",
              "$$hashKey": "object:11310"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=33",
              "$$hashKey": "object:11311"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1449423203",
      "id": "20220826-112951_1520914495",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:19+0000",
      "dateFinished": "2023-02-02T11:08:21+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9021"
    },
    {
      "text": "%pyspark\nprint(\"Not mapped price level prices:\",pricelistSoldtoClientsDf.where(col(\"GHierarchyId\").isNull()).count())",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:21+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Not mapped price level prices: 5221\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=35",
              "$$hashKey": "object:11373"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1961431289",
      "id": "20220826-112951_771386975",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:21+0000",
      "dateFinished": "2023-02-02T11:08:22+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9022"
    },
    {
      "text": "%pyspark\npricelistClientsDf=pricelistClientsDf.where(col(\"GHierarchyId\").isNotNull()).dropDuplicates()\n# Sold to level prices with soldto's belonging to same ghierachy id must by collapsed to one record\npricelistSoldtoClientsDf=pricelistSoldtoClientsDf.where(col(\"GHierarchyId\").isNotNull()).dropDuplicates(['GHierarchyId','MATERIAL','START_DATE','END_DATE'])",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:22+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_2025116231",
      "id": "20220826-112951_1563756959",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:22+0000",
      "dateFinished": "2023-02-02T11:08:22+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9023"
    },
    {
      "text": "%pyspark\npricelistClientsDf.count()\npricelistSoldtoClientsDf.count()",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:22+0000",
      "progress": 28,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "30008"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=37",
              "$$hashKey": "object:11473"
            },
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=39",
              "$$hashKey": "object:11474"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1386389354",
      "id": "20220826-112951_1754030537",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:22+0000",
      "dateFinished": "2023-02-02T11:08:27+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9024"
    },
    {
      "text": "%pyspark\npricelistPriceLevelFinalDf=pricelistClientsDf.select(*pricelistDf.columns,col(\"GHierarchyId\").alias(\"G_HIERARCHY_ID\"))\npricelistSoldtoLevelFinalDf=pricelistSoldtoClientsDf.select(*pricelistDf.columns,col(\"GHierarchyId\").alias(\"G_HIERARCHY_ID\"))\n\nmergedDf=pricelistPriceLevelFinalDf.unionByName(pricelistSoldtoLevelFinalDf)\n# Giving the priority to prices. Soltdo level prices have more priority than price level ones.\nmergedDf=mergedDf.withColumn(\"PRIORITY\",when(col(\"SOLD_TO\").isNull(),10).otherwise(20))\nmergedDf.count()",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:27+0000",
      "progress": 83,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "535336"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=42",
              "$$hashKey": "object:11536"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_672546106",
      "id": "20220826-112951_139129423",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:27+0000",
      "dateFinished": "2023-02-02T11:08:30+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9025"
    },
    {
      "text": "%pyspark\nwindow = Window.\\\n              partitionBy('G_HIERARCHY_ID','MATERIAL','START_DATE','END_DATE').\\\n              orderBy(mergedDf[\"PRIORITY\"].desc())\nfinalPartDf = mergedDf.withColumn(\"MAX_PRIORITY\",max(\"PRIORITY\").over(window))\nfinalDf=finalPartDf.where(col(\"PRIORITY\")==col(\"MAX_PRIORITY\")).drop(\"MAX_PRIORITY\")\nfinalDf=finalDf.dropDuplicates(['G_HIERARCHY_ID','ZREP','START_DATE','END_DATE'])\nfinalDf.count()\n\n",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:30+0000",
      "progress": 92,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "468589"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=45",
              "$$hashKey": "object:11594"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1196170530",
      "id": "20220826-112951_1983704463",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:30+0000",
      "dateFinished": "2023-02-02T11:08:46+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9026"
    },
    {
      "text": "%pyspark\nfinalJupiterDf=finalDf.withColumn(\"UNIT_OF_MEASURE\",lit(\"CS\")).select('G_HIERARCHY_ID','ZREP',col('PRICE_CS').alias('PRICE'),'START_DATE',col('END_DATE').alias('FINISH_DATE'),'UNIT_OF_MEASURE','CURRENCY')\nfinalDf=finalDf.select('G_HIERARCHY_ID','MATERIAL','ZREP','PRICE_CS','PRICE_KG','PRICE_ST','START_DATE','END_DATE','RELEASE_STATUS')\n",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:46+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_901952824",
      "id": "20220826-112951_53508902",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:46+0000",
      "dateFinished": "2023-02-02T11:08:46+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9027"
    },
    {
      "text": "%pyspark\ndupsDf=finalDf\\\n.groupBy('G_HIERARCHY_ID','ZREP','START_DATE','END_DATE')\\\n.agg((count(\"*\")>1).cast(\"int\").alias(\"DUPLICATE\"))\\\n.where(col(\"DUPLICATE\")>0)\n\ndupsDf.count()",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:08:46+0000",
      "progress": 95,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "0"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=48",
              "$$hashKey": "object:11694"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1758724436",
      "id": "20220826-112951_138002592",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:08:46+0000",
      "dateFinished": "2023-02-02T11:09:02+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9028"
    },
    {
      "text": "%pyspark\n# display(finalJupiterDf)",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:09:02+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1510253938",
      "id": "20220826-112951_1472107362",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:09:02+0000",
      "dateFinished": "2023-02-02T11:09:02+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9029"
    },
    {
      "text": "%pyspark\n# display(finalJupiterDf.where(col(\"ZREP\").isNull()))",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:09:02+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_671128713",
      "id": "20220826-112951_1191140495",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:09:02+0000",
      "dateFinished": "2023-02-02T11:09:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9030"
    },
    {
      "text": "%pyspark\nfinalJupiterDf.count()",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:09:03+0000",
      "progress": 88,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "468589"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "https://ui-c9q0pukbr2ivf12r83k8-rc1a-dataproc-c-yxo0bcsk7jm0xjj7-43275.dataproc-ui.yandexcloud.net/jobs/job?id=51",
              "$$hashKey": "object:11836"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1742624695",
      "id": "20220826-112951_1175909949",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:09:03+0000",
      "dateFinished": "2023-02-02T11:09:11+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9031"
    },
    {
      "text": "%pyspark\ntry:\n  subprocess.call([\"hadoop\", \"fs\", \"-rm\",\"-r\", PRICELIST_FDM_ARCHIVE_OUTPUT_DIR])\n  subprocess.call([\"hadoop\", \"fs\", \"-cp\", PRICELIST_FDM_OUTPUT_DIR, PRICELIST_FDM_ARCHIVE_OUTPUT_DIR])\nexcept Exception as e:\n  print(str(e))",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:09:11+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_1433098868",
      "id": "20220826-112951_15467167",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:09:11+0000",
      "dateFinished": "2023-02-02T11:09:14+0000",
      "status": "FINISHED",
      "$$hashKey": "object:9032"
    },
    {
      "text": "%pyspark\n# finalJupiterDf.write.mode(\"overwrite\").parquet(PRICELIST_FDM_OUTPUT_DIR)\n\nfinalJupiterDf\\\n.withColumn('START_DATE',col('START_DATE').cast('timestamp'))\\\n.withColumn('FINISH_DATE',col('START_DATE').cast('timestamp'))\\\n.repartition(1)\\\n.write.csv(PRICELIST_FDM_OUTPUT_DIR,\nsep=\"\\u0001\",\nheader=True,\nmode=\"overwrite\",\nemptyValue=\"\",\ntimestampFormat=\"yyyy-MM-dd HH:mm:ss\"\n)",
      "user": "anonymous",
      "dateUpdated": "2023-02-02T11:31:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mPy4JJavaError\u001b[0m                             Traceback (most recent call last)\n\u001b[0;32m<ipython-input-144-ab298b29dbef>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# finalJupiterDf.write.mode(\"overwrite\").parquet(PRICELIST_FDM_OUTPUT_DIR)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mfinalJupiterDf\u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mrepartition\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m .write.csv(PRICELIST_FDM_OUTPUT_DIR,\n\n\u001b[0;32m/usr/lib/spark/python/pyspark/sql/readwriter.py\u001b[0m in \u001b[0;36mcsv\u001b[0;34m(self, path, mode, compression, sep, quote, escape, header, nullValue, escapeQuotes, quoteAll, dateFormat, timestampFormat, ignoreLeadingWhiteSpace, ignoreTrailingWhiteSpace, charToEscapeQuoteEscaping, encoding, emptyValue, lineSep)\u001b[0m\n\u001b[1;32m   1028\u001b[0m                        \u001b[0mcharToEscapeQuoteEscaping\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcharToEscapeQuoteEscaping\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1029\u001b[0m                        encoding=encoding, emptyValue=emptyValue, lineSep=lineSep)\n\u001b[0;32m-> 1030\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jwrite\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcsv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1031\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1032\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0msince\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/usr/lib/spark/python/lib/py4j-0.10.9-src.zip/py4j/java_gateway.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m   1302\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1303\u001b[0m         \u001b[0manswer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgateway_client\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1304\u001b[0;31m         return_value = get_return_value(\n\u001b[0m\u001b[1;32m   1305\u001b[0m             answer, self.gateway_client, self.target_id, self.name)\n\u001b[1;32m   1306\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/usr/lib/spark/python/pyspark/sql/utils.py\u001b[0m in \u001b[0;36mdeco\u001b[0;34m(*a, **kw)\u001b[0m\n\u001b[1;32m    126\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdeco\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 128\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    129\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mpy4j\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprotocol\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mPy4JJavaError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    130\u001b[0m             \u001b[0mconverted\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconvert_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjava_exception\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/usr/lib/spark/python/lib/py4j-0.10.9-src.zip/py4j/protocol.py\u001b[0m in \u001b[0;36mget_return_value\u001b[0;34m(answer, gateway_client, target_id, name)\u001b[0m\n\u001b[1;32m    324\u001b[0m             \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mOUTPUT_CONVERTER\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0manswer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgateway_client\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    325\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0manswer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mREFERENCE_TYPE\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 326\u001b[0;31m                 raise Py4JJavaError(\n\u001b[0m\u001b[1;32m    327\u001b[0m                     \u001b[0;34m\"An error occurred while calling {0}{1}{2}.\\n\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    328\u001b[0m                     format(target_id, \".\", name), value)\n\n\u001b[0;31mPy4JJavaError\u001b[0m: An error occurred while calling o524.csv.\n: org.apache.hadoop.security.AccessControlException: Permission denied: user=zeppelin, access=WRITE, inode=\"/JUPITER/OUTPUT/jupiter_pricelist_fdm\":dataproc-agent:hadoop:drwxr-xr-x\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:399)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:258)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:193)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirectory.checkPermission(FSDirectory.java:1896)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirDeleteOp.delete(FSDirDeleteOp.java:110)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.delete(FSNamesystem.java:3104)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.delete(NameNodeRpcServer.java:1127)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.delete(ClientNamenodeProtocolServerSideTranslatorPB.java:708)\n\tat org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:422)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)\n\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:121)\n\tat org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:88)\n\tat org.apache.hadoop.hdfs.DFSClient.delete(DFSClient.java:1614)\n\tat org.apache.hadoop.hdfs.DistributedFileSystem$19.doCall(DistributedFileSystem.java:949)\n\tat org.apache.hadoop.hdfs.DistributedFileSystem$19.doCall(DistributedFileSystem.java:946)\n\tat org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81)\n\tat org.apache.hadoop.hdfs.DistributedFileSystem.delete(DistributedFileSystem.java:956)\n\tat org.apache.spark.internal.io.FileCommitProtocol.deleteWithJob(FileCommitProtocol.scala:124)\n\tat org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.deleteMatchingPartitions(InsertIntoHadoopFsRelationCommand.scala:226)\n\tat org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:129)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:108)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:106)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:131)\n\tat org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)\n\tat org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n\tat org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)\n\tat org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)\n\tat org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:127)\n\tat org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:126)\n\tat org.apache.spark.sql.DataFrameWriter.$anonfun$runCommand$1(DataFrameWriter.scala:962)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:100)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:160)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:87)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:767)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)\n\tat org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:962)\n\tat org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:414)\n\tat org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:398)\n\tat org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:287)\n\tat org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:952)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\n\tat java.lang.Thread.run(Thread.java:750)\nCaused by: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.security.AccessControlException): Permission denied: user=zeppelin, access=WRITE, inode=\"/JUPITER/OUTPUT/jupiter_pricelist_fdm\":dataproc-agent:hadoop:drwxr-xr-x\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:399)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:258)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:193)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirectory.checkPermission(FSDirectory.java:1896)\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirDeleteOp.delete(FSDirDeleteOp.java:110)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.delete(FSNamesystem.java:3104)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.delete(NameNodeRpcServer.java:1127)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.delete(ClientNamenodeProtocolServerSideTranslatorPB.java:708)\n\tat org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:422)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)\n\n\tat org.apache.hadoop.ipc.Client.getRpcResponse(Client.java:1562)\n\tat org.apache.hadoop.ipc.Client.call(Client.java:1508)\n\tat org.apache.hadoop.ipc.Client.call(Client.java:1405)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)\n\tat com.sun.proxy.$Proxy17.delete(Unknown Source)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.delete(ClientNamenodeProtocolTranslatorPB.java:644)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)\n\tat org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)\n\tat com.sun.proxy.$Proxy18.delete(Unknown Source)\n\tat org.apache.hadoop.hdfs.DFSClient.delete(DFSClient.java:1612)\n\t... 39 more\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1675324802047_322582281",
      "id": "20220826-112951_594195555",
      "dateCreated": "2023-02-02T08:00:02+0000",
      "dateStarted": "2023-02-02T11:09:14+0000",
      "dateFinished": "2023-02-02T11:09:15+0000",
      "status": "ERROR",
      "$$hashKey": "object:9034"
    }
  ],
  "name": "JUPITER_PRICELIST_FDM",
  "id": "2HSRSRQ1P",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {
    "isRunning": false
  },
  "path": "/JUPITER/PRICELIST/JUPITER_PRICELIST_FDM"
}