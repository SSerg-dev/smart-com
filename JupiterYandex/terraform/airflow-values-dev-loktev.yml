USER-SUPPLIED VALUES:
dagProcessor:
  extraVolumeMounts:
  - mountPath: /opt/airflow/dags
    name: airflow-dags
  extraVolumes:
  - name: airflow-dags
    persistentVolumeClaim:
      claimName: dags-s3-pvc-static
executor: KubernetesExecutor
images:
  airflow:
    pullPolicy: Always
    repository: cr.yandex/crp82nk4hju0v8d8r6pt/airflow
    tag: airflow-jupiter-dev
loadExamples: false
logs:
  persistence:
    enabled: true
    size: 50Gi
    storageClassName: csi-s3
rbac.create: true
redis.enabled: false
scheduler:
  extraVolumeMounts:
  - mountPath: /opt/airflow/dags
    name: airflow-dags
  extraVolumes:
  - name: airflow-dags
    persistentVolumeClaim:
      claimName: dags-s3-pvc-static
  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 180
    timeoutSeconds: 40
serviceaccount.create: true
triggerer:
  extraVolumeMounts:
  - mountPath: /opt/airflow/dags
    name: airflow-dags
  extraVolumes:
  - name: airflow-dags
    persistentVolumeClaim:
      claimName: dags-s3-pvc-static
webserver:
  extraVolumeMounts:
  - mountPath: /opt/airflow/dags
    name: airflow-dags
  extraVolumes:
  - name: airflow-dags
    persistentVolumeClaim:
      claimName: dags-s3-pvc-static
  service:
    annotations:
      yandex.cloud/load-balancer-type: internal
      yandex.cloud/subnet-id: e2lqhnn81o8p8ul1dtv2
    loadBalancerIP: null
    loadBalancerSourceRanges: []
    ports:
    - name: airflow-ui
      port: "8080"
    type: LoadBalancer
workers:
  extraVolumeMounts:
  - mountPath: /opt/airflow/dags
    name: airflow-dags
  extraVolumes:
  - name: airflow-dags
    persistentVolumeClaim:
      claimName: dags-s3-pvc-static
