USER-SUPPLIED VALUES:
dagProcessor:
  extraVolumeMounts:
  - mountPath: /opt/airflow/dags
    name: ${pvName}
  extraVolumes:
  - name: ${pvName}
    persistentVolumeClaim:
      claimName: ${pvcName}
executor: KubernetesExecutor
loadExamples: false
rbac.create: true
redis.enabled: false
serviceaccount.create: true
images:
  airflow:
    pullPolicy: Always
    repository: ${image}
    tag: ${tag}
logs:
  persistence:
    enabled: true
    existingClaim: airflow-logs-pvc
workers:
  extraVolumeMounts:
  - mountPath: /opt/airflow/dags
    name: ${pvName}
  extraVolumes:
  - name: ${pvName}
    persistentVolumeClaim:
      claimName: ${pvcName}
scheduler:
  extraVolumeMounts:
  - mountPath: /opt/airflow/dags
    name: ${pvName}
  extraVolumes:
  - name: ${pvName}
    persistentVolumeClaim:
      claimName: ${pvcName}
  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 180
    timeoutSeconds: 40
triggerer:
  extraVolumeMounts:
  - mountPath: /opt/airflow/dags
    name: ${pvName}
  extraVolumes:
  - name: ${pvName}
    persistentVolumeClaim:
      claimName: ${pvcName}
webserver:
  extraVolumeMounts:
  - mountPath: /opt/airflow/dags
    name: ${pvName}
  extraVolumes:
  - name: ${pvName}
    persistentVolumeClaim:
      claimName: ${pvcName}
  service:
    annotations:
      yandex.cloud/load-balancer-type: internal
      yandex.cloud/subnet-id: "${subnetId}"
    type: LoadBalancer
